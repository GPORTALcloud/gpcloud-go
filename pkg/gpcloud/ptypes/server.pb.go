// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: server.proto

package ptypes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerStatus int32

const (
	ServerStatus_SETUP_PLATFORM_MANAGEMENT ServerStatus = 0
	ServerStatus_AVAILABLE                 ServerStatus = 1
	ServerStatus_PROVISIONING              ServerStatus = 2
	ServerStatus_POST_PROVISIONING         ServerStatus = 3
	ServerStatus_PROVISIONED               ServerStatus = 4
	ServerStatus_DEPROVISIONING            ServerStatus = 5
	ServerStatus_DELETING                  ServerStatus = 6
	ServerStatus_IMPORTING                 ServerStatus = 7
)

// Enum value maps for ServerStatus.
var (
	ServerStatus_name = map[int32]string{
		0: "SETUP_PLATFORM_MANAGEMENT",
		1: "AVAILABLE",
		2: "PROVISIONING",
		3: "POST_PROVISIONING",
		4: "PROVISIONED",
		5: "DEPROVISIONING",
		6: "DELETING",
		7: "IMPORTING",
	}
	ServerStatus_value = map[string]int32{
		"SETUP_PLATFORM_MANAGEMENT": 0,
		"AVAILABLE":                 1,
		"PROVISIONING":              2,
		"POST_PROVISIONING":         3,
		"PROVISIONED":               4,
		"DEPROVISIONING":            5,
		"DELETING":                  6,
		"IMPORTING":                 7,
	}
)

func (x ServerStatus) Enum() *ServerStatus {
	p := new(ServerStatus)
	*p = x
	return p
}

func (x ServerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[0].Descriptor()
}

func (ServerStatus) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[0]
}

func (x ServerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerStatus.Descriptor instead.
func (ServerStatus) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

type ServerJob int32

const (
	ServerJob_INSTALL ServerJob = 0
	ServerJob_DEPRO   ServerJob = 1
	ServerJob_PM      ServerJob = 2
	ServerJob_SW      ServerJob = 3
)

// Enum value maps for ServerJob.
var (
	ServerJob_name = map[int32]string{
		0: "INSTALL",
		1: "DEPRO",
		2: "PM",
		3: "SW",
	}
	ServerJob_value = map[string]int32{
		"INSTALL": 0,
		"DEPRO":   1,
		"PM":      2,
		"SW":      3,
	}
)

func (x ServerJob) Enum() *ServerJob {
	p := new(ServerJob)
	*p = x
	return p
}

func (x ServerJob) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerJob) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[1].Descriptor()
}

func (ServerJob) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[1]
}

func (x ServerJob) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerJob.Descriptor instead.
func (ServerJob) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

type PlatformManagementType int32

const (
	PlatformManagementType_IDRAC PlatformManagementType = 0
	PlatformManagementType_ILO5  PlatformManagementType = 1
)

// Enum value maps for PlatformManagementType.
var (
	PlatformManagementType_name = map[int32]string{
		0: "IDRAC",
		1: "ILO5",
	}
	PlatformManagementType_value = map[string]int32{
		"IDRAC": 0,
		"ILO5":  1,
	}
)

func (x PlatformManagementType) Enum() *PlatformManagementType {
	p := new(PlatformManagementType)
	*p = x
	return p
}

func (x PlatformManagementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlatformManagementType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[2].Descriptor()
}

func (PlatformManagementType) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[2]
}

func (x PlatformManagementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlatformManagementType.Descriptor instead.
func (PlatformManagementType) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

type ServerPowerStatus int32

const (
	// Start server
	ServerPowerStatus_SHUT_ON ServerPowerStatus = 0
	// Shut-off server
	ServerPowerStatus_SHUT_OFF ServerPowerStatus = 1
	// Hard-reset server
	ServerPowerStatus_RESET ServerPowerStatus = 2
	// Hard-reset platform management
	ServerPowerStatus_RESET_PLATFORM_MANAGEMENT ServerPowerStatus = 3
)

// Enum value maps for ServerPowerStatus.
var (
	ServerPowerStatus_name = map[int32]string{
		0: "SHUT_ON",
		1: "SHUT_OFF",
		2: "RESET",
		3: "RESET_PLATFORM_MANAGEMENT",
	}
	ServerPowerStatus_value = map[string]int32{
		"SHUT_ON":                   0,
		"SHUT_OFF":                  1,
		"RESET":                     2,
		"RESET_PLATFORM_MANAGEMENT": 3,
	}
)

func (x ServerPowerStatus) Enum() *ServerPowerStatus {
	p := new(ServerPowerStatus)
	*p = x
	return p
}

func (x ServerPowerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerPowerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[3].Descriptor()
}

func (ServerPowerStatus) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[3]
}

func (x ServerPowerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerPowerStatus.Descriptor instead.
func (ServerPowerStatus) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

type MonitoringTag int32

const (
	MonitoringTag_MONITOR_PLATFORM_MANAGEMENT MonitoringTag = 0
	MonitoringTag_MONITOR_HOST                MonitoringTag = 1
)

// Enum value maps for MonitoringTag.
var (
	MonitoringTag_name = map[int32]string{
		0: "MONITOR_PLATFORM_MANAGEMENT",
		1: "MONITOR_HOST",
	}
	MonitoringTag_value = map[string]int32{
		"MONITOR_PLATFORM_MANAGEMENT": 0,
		"MONITOR_HOST":                1,
	}
)

func (x MonitoringTag) Enum() *MonitoringTag {
	p := new(MonitoringTag)
	*p = x
	return p
}

func (x MonitoringTag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MonitoringTag) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[4].Descriptor()
}

func (MonitoringTag) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[4]
}

func (x MonitoringTag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MonitoringTag.Descriptor instead.
func (MonitoringTag) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

type PlatformManagement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        PlatformManagementType `protobuf:"varint,1,opt,name=type,proto3,enum=api.server.PlatformManagementType" json:"type,omitempty"`
	Ip          string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Username    string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password    string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	VncPassword string                 `protobuf:"bytes,5,opt,name=vnc_password,json=vncPassword,proto3" json:"vnc_password,omitempty"`
	VncPort     int32                  `protobuf:"varint,6,opt,name=vnc_port,json=vncPort,proto3" json:"vnc_port,omitempty"`
	Online      bool                   `protobuf:"varint,7,opt,name=online,proto3" json:"online,omitempty"`
	ServerId    string                 `protobuf:"bytes,8,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *PlatformManagement) Reset() {
	*x = PlatformManagement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformManagement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformManagement) ProtoMessage() {}

func (x *PlatformManagement) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformManagement.ProtoReflect.Descriptor instead.
func (*PlatformManagement) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

func (x *PlatformManagement) GetType() PlatformManagementType {
	if x != nil {
		return x.Type
	}
	return PlatformManagementType_IDRAC
}

func (x *PlatformManagement) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PlatformManagement) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PlatformManagement) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PlatformManagement) GetVncPassword() string {
	if x != nil {
		return x.VncPassword
	}
	return ""
}

func (x *PlatformManagement) GetVncPort() int32 {
	if x != nil {
		return x.VncPort
	}
	return 0
}

func (x *PlatformManagement) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *PlatformManagement) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Server UUID
	Id         string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Datacenter *DataCenter `protobuf:"bytes,3,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	NetboxLink string      `protobuf:"bytes,4,opt,name=netbox_link,json=netboxLink,proto3" json:"netbox_link,omitempty"`
	// Flavour
	Flavour *Flavour `protobuf:"bytes,5,opt,name=flavour,proto3" json:"flavour,omitempty"`
	// Server status
	Status          ServerStatus           `protobuf:"varint,6,opt,name=status,proto3,enum=api.server.ServerStatus" json:"status,omitempty"`
	StatusUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=status_updated_at,json=statusUpdatedAt,proto3" json:"status_updated_at,omitempty"`
	Interfaces      []*ServerInterface     `protobuf:"bytes,8,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	// Platform management type
	PlatformManagementType PlatformManagementType `protobuf:"varint,9,opt,name=platform_management_type,json=platformManagementType,proto3,enum=api.server.PlatformManagementType" json:"platform_management_type,omitempty"`
	ServerAlert            bool                   `protobuf:"varint,10,opt,name=server_alert,json=serverAlert,proto3" json:"server_alert,omitempty"`
	// Server timestamps
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Server) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Server) GetDatacenter() *DataCenter {
	if x != nil {
		return x.Datacenter
	}
	return nil
}

func (x *Server) GetNetboxLink() string {
	if x != nil {
		return x.NetboxLink
	}
	return ""
}

func (x *Server) GetFlavour() *Flavour {
	if x != nil {
		return x.Flavour
	}
	return nil
}

func (x *Server) GetStatus() ServerStatus {
	if x != nil {
		return x.Status
	}
	return ServerStatus_SETUP_PLATFORM_MANAGEMENT
}

func (x *Server) GetStatusUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusUpdatedAt
	}
	return nil
}

func (x *Server) GetInterfaces() []*ServerInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *Server) GetPlatformManagementType() PlatformManagementType {
	if x != nil {
		return x.PlatformManagementType
	}
	return PlatformManagementType_IDRAC
}

func (x *Server) GetServerAlert() bool {
	if x != nil {
		return x.ServerAlert
	}
	return false
}

func (x *Server) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Server) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ServerLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Log       string                 `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ServerLog) Reset() {
	*x = ServerLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerLog) ProtoMessage() {}

func (x *ServerLog) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerLog.ProtoReflect.Descriptor instead.
func (*ServerLog) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

func (x *ServerLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServerLog) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *ServerLog) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ServerLog) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AdminGetServerLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Page int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *AdminGetServerLogsRequest) Reset() {
	*x = AdminGetServerLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetServerLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetServerLogsRequest) ProtoMessage() {}

func (x *AdminGetServerLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetServerLogsRequest.ProtoReflect.Descriptor instead.
func (*AdminGetServerLogsRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

func (x *AdminGetServerLogsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdminGetServerLogsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type AdminGetServerLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs       []*ServerLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	PagesTotal int32        `protobuf:"varint,2,opt,name=pages_total,json=pagesTotal,proto3" json:"pages_total,omitempty"`
}

func (x *AdminGetServerLogsResponse) Reset() {
	*x = AdminGetServerLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetServerLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetServerLogsResponse) ProtoMessage() {}

func (x *AdminGetServerLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetServerLogsResponse.ProtoReflect.Descriptor instead.
func (*AdminGetServerLogsResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

func (x *AdminGetServerLogsResponse) GetLogs() []*ServerLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *AdminGetServerLogsResponse) GetPagesTotal() int32 {
	if x != nil {
		return x.PagesTotal
	}
	return 0
}

type AdminImportServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetboxIds []int64 `protobuf:"varint,1,rep,packed,name=netbox_ids,json=netboxIds,proto3" json:"netbox_ids,omitempty"`
}

func (x *AdminImportServerRequest) Reset() {
	*x = AdminImportServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminImportServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminImportServerRequest) ProtoMessage() {}

func (x *AdminImportServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminImportServerRequest.ProtoReflect.Descriptor instead.
func (*AdminImportServerRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5}
}

func (x *AdminImportServerRequest) GetNetboxIds() []int64 {
	if x != nil {
		return x.NetboxIds
	}
	return nil
}

type AdminImportServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server []*Server `protobuf:"bytes,1,rep,name=server,proto3" json:"server,omitempty"`
	Errors []string  `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *AdminImportServerResponse) Reset() {
	*x = AdminImportServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminImportServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminImportServerResponse) ProtoMessage() {}

func (x *AdminImportServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminImportServerResponse.ProtoReflect.Descriptor instead.
func (*AdminImportServerResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6}
}

func (x *AdminImportServerResponse) GetServer() []*Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *AdminImportServerResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type AdminListAvailableServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server []*AdminListAvailableServerResponse_AvailableServer `protobuf:"bytes,1,rep,name=server,proto3" json:"server,omitempty"`
}

func (x *AdminListAvailableServerResponse) Reset() {
	*x = AdminListAvailableServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminListAvailableServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminListAvailableServerResponse) ProtoMessage() {}

func (x *AdminListAvailableServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminListAvailableServerResponse.ProtoReflect.Descriptor instead.
func (*AdminListAvailableServerResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7}
}

func (x *AdminListAvailableServerResponse) GetServer() []*AdminListAvailableServerResponse_AvailableServer {
	if x != nil {
		return x.Server
	}
	return nil
}

type RebootServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformManagement *PlatformManagement `protobuf:"bytes,1,opt,name=platform_management,json=platformManagement,proto3" json:"platform_management,omitempty"`
	NetworkBoot        bool                `protobuf:"varint,2,opt,name=network_boot,json=networkBoot,proto3" json:"network_boot,omitempty"`
}

func (x *RebootServerRequest) Reset() {
	*x = RebootServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebootServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootServerRequest) ProtoMessage() {}

func (x *RebootServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootServerRequest.ProtoReflect.Descriptor instead.
func (*RebootServerRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8}
}

func (x *RebootServerRequest) GetPlatformManagement() *PlatformManagement {
	if x != nil {
		return x.PlatformManagement
	}
	return nil
}

func (x *RebootServerRequest) GetNetworkBoot() bool {
	if x != nil {
		return x.NetworkBoot
	}
	return false
}

type ShutOffServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformManagement *PlatformManagement `protobuf:"bytes,1,opt,name=platform_management,json=platformManagement,proto3" json:"platform_management,omitempty"`
}

func (x *ShutOffServerRequest) Reset() {
	*x = ShutOffServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutOffServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutOffServerRequest) ProtoMessage() {}

func (x *ShutOffServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutOffServerRequest.ProtoReflect.Descriptor instead.
func (*ShutOffServerRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9}
}

func (x *ShutOffServerRequest) GetPlatformManagement() *PlatformManagement {
	if x != nil {
		return x.PlatformManagement
	}
	return nil
}

type PlatformManagementNetworkSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dhcp       bool   `protobuf:"varint,1,opt,name=dhcp,proto3" json:"dhcp,omitempty"`
	Ipv4       *Cidr  `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Gateway    *Cidr  `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	SubnetMask string `protobuf:"bytes,4,opt,name=subnet_mask,json=subnetMask,proto3" json:"subnet_mask,omitempty"`
	VlanTag    int32  `protobuf:"varint,5,opt,name=vlan_tag,json=vlanTag,proto3" json:"vlan_tag,omitempty"`
}

func (x *PlatformManagementNetworkSettings) Reset() {
	*x = PlatformManagementNetworkSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformManagementNetworkSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformManagementNetworkSettings) ProtoMessage() {}

func (x *PlatformManagementNetworkSettings) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformManagementNetworkSettings.ProtoReflect.Descriptor instead.
func (*PlatformManagementNetworkSettings) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{10}
}

func (x *PlatformManagementNetworkSettings) GetDhcp() bool {
	if x != nil {
		return x.Dhcp
	}
	return false
}

func (x *PlatformManagementNetworkSettings) GetIpv4() *Cidr {
	if x != nil {
		return x.Ipv4
	}
	return nil
}

func (x *PlatformManagementNetworkSettings) GetGateway() *Cidr {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *PlatformManagementNetworkSettings) GetSubnetMask() string {
	if x != nil {
		return x.SubnetMask
	}
	return ""
}

func (x *PlatformManagementNetworkSettings) GetVlanTag() int32 {
	if x != nil {
		return x.VlanTag
	}
	return 0
}

type ConfigurePlatformManagementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformManagement *PlatformManagement                `protobuf:"bytes,1,opt,name=platform_management,json=platformManagement,proto3" json:"platform_management,omitempty"`
	ServerName         string                             `protobuf:"bytes,2,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	Switch             *Switch                            `protobuf:"bytes,3,opt,name=switch,proto3" json:"switch,omitempty"`
	SwitchPort         string                             `protobuf:"bytes,4,opt,name=switch_port,json=switchPort,proto3" json:"switch_port,omitempty"`
	NewPassword        string                             `protobuf:"bytes,5,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	Provisioning       bool                               `protobuf:"varint,6,opt,name=provisioning,proto3" json:"provisioning,omitempty"`
	NetworkSettings    *PlatformManagementNetworkSettings `protobuf:"bytes,7,opt,name=network_settings,json=networkSettings,proto3" json:"network_settings,omitempty"`
}

func (x *ConfigurePlatformManagementRequest) Reset() {
	*x = ConfigurePlatformManagementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurePlatformManagementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurePlatformManagementRequest) ProtoMessage() {}

func (x *ConfigurePlatformManagementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurePlatformManagementRequest.ProtoReflect.Descriptor instead.
func (*ConfigurePlatformManagementRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{11}
}

func (x *ConfigurePlatformManagementRequest) GetPlatformManagement() *PlatformManagement {
	if x != nil {
		return x.PlatformManagement
	}
	return nil
}

func (x *ConfigurePlatformManagementRequest) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *ConfigurePlatformManagementRequest) GetSwitch() *Switch {
	if x != nil {
		return x.Switch
	}
	return nil
}

func (x *ConfigurePlatformManagementRequest) GetSwitchPort() string {
	if x != nil {
		return x.SwitchPort
	}
	return ""
}

func (x *ConfigurePlatformManagementRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *ConfigurePlatformManagementRequest) GetProvisioning() bool {
	if x != nil {
		return x.Provisioning
	}
	return false
}

func (x *ConfigurePlatformManagementRequest) GetNetworkSettings() *PlatformManagementNetworkSettings {
	if x != nil {
		return x.NetworkSettings
	}
	return nil
}

type AdminGetServerVNCTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdminGetServerVNCTokenRequest) Reset() {
	*x = AdminGetServerVNCTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetServerVNCTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetServerVNCTokenRequest) ProtoMessage() {}

func (x *AdminGetServerVNCTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetServerVNCTokenRequest.ProtoReflect.Descriptor instead.
func (*AdminGetServerVNCTokenRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12}
}

func (x *AdminGetServerVNCTokenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AdminGetServerVNCTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AdminGetServerVNCTokenResponse) Reset() {
	*x = AdminGetServerVNCTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetServerVNCTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetServerVNCTokenResponse) ProtoMessage() {}

func (x *AdminGetServerVNCTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetServerVNCTokenResponse.ProtoReflect.Descriptor instead.
func (*AdminGetServerVNCTokenResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{13}
}

func (x *AdminGetServerVNCTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AdminGetServerVNCTokenResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type VNCConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip       string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port     int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *VNCConnection) Reset() {
	*x = VNCConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VNCConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VNCConnection) ProtoMessage() {}

func (x *VNCConnection) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VNCConnection.ProtoReflect.Descriptor instead.
func (*VNCConnection) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{14}
}

func (x *VNCConnection) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *VNCConnection) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *VNCConnection) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GetVNCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetVNCRequest) Reset() {
	*x = GetVNCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVNCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVNCRequest) ProtoMessage() {}

func (x *GetVNCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVNCRequest.ProtoReflect.Descriptor instead.
func (*GetVNCRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{15}
}

func (x *GetVNCRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetVNCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Websocket string         `protobuf:"bytes,1,opt,name=websocket,proto3" json:"websocket,omitempty"`
	Vnc       *VNCConnection `protobuf:"bytes,2,opt,name=vnc,proto3" json:"vnc,omitempty"`
}

func (x *GetVNCResponse) Reset() {
	*x = GetVNCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVNCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVNCResponse) ProtoMessage() {}

func (x *GetVNCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVNCResponse.ProtoReflect.Descriptor instead.
func (*GetVNCResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{16}
}

func (x *GetVNCResponse) GetWebsocket() string {
	if x != nil {
		return x.Websocket
	}
	return ""
}

func (x *GetVNCResponse) GetVnc() *VNCConnection {
	if x != nil {
		return x.Vnc
	}
	return nil
}

type CreatePxeLinuxConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreatePxeLinuxConfigRequest) Reset() {
	*x = CreatePxeLinuxConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePxeLinuxConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePxeLinuxConfigRequest) ProtoMessage() {}

func (x *CreatePxeLinuxConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePxeLinuxConfigRequest.ProtoReflect.Descriptor instead.
func (*CreatePxeLinuxConfigRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{17}
}

func (x *CreatePxeLinuxConfigRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetAutoRunScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *GetAutoRunScriptRequest) Reset() {
	*x = GetAutoRunScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAutoRunScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutoRunScriptRequest) ProtoMessage() {}

func (x *GetAutoRunScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutoRunScriptRequest.ProtoReflect.Descriptor instead.
func (*GetAutoRunScriptRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{18}
}

func (x *GetAutoRunScriptRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type GetAutoRunScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Script string `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
}

func (x *GetAutoRunScriptResponse) Reset() {
	*x = GetAutoRunScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAutoRunScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutoRunScriptResponse) ProtoMessage() {}

func (x *GetAutoRunScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutoRunScriptResponse.ProtoReflect.Descriptor instead.
func (*GetAutoRunScriptResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{19}
}

func (x *GetAutoRunScriptResponse) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

type AdminChangeServerPowerStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status ServerPowerStatus `protobuf:"varint,2,opt,name=status,proto3,enum=api.server.ServerPowerStatus" json:"status,omitempty"`
}

func (x *AdminChangeServerPowerStatusRequest) Reset() {
	*x = AdminChangeServerPowerStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminChangeServerPowerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminChangeServerPowerStatusRequest) ProtoMessage() {}

func (x *AdminChangeServerPowerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminChangeServerPowerStatusRequest.ProtoReflect.Descriptor instead.
func (*AdminChangeServerPowerStatusRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{20}
}

func (x *AdminChangeServerPowerStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdminChangeServerPowerStatusRequest) GetStatus() ServerPowerStatus {
	if x != nil {
		return x.Status
	}
	return ServerPowerStatus_SHUT_ON
}

type AdminGetServerPlatformManagementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdminGetServerPlatformManagementRequest) Reset() {
	*x = AdminGetServerPlatformManagementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetServerPlatformManagementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetServerPlatformManagementRequest) ProtoMessage() {}

func (x *AdminGetServerPlatformManagementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetServerPlatformManagementRequest.ProtoReflect.Descriptor instead.
func (*AdminGetServerPlatformManagementRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{21}
}

func (x *AdminGetServerPlatformManagementRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AdminCreateServerJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Job ServerJob `protobuf:"varint,2,opt,name=job,proto3,enum=api.server.ServerJob" json:"job,omitempty"`
}

func (x *AdminCreateServerJobRequest) Reset() {
	*x = AdminCreateServerJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateServerJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateServerJobRequest) ProtoMessage() {}

func (x *AdminCreateServerJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateServerJobRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateServerJobRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{22}
}

func (x *AdminCreateServerJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdminCreateServerJobRequest) GetJob() ServerJob {
	if x != nil {
		return x.Job
	}
	return ServerJob_INSTALL
}

type PostProvisioningCallbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *PostProvisioningCallbackRequest) Reset() {
	*x = PostProvisioningCallbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostProvisioningCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostProvisioningCallbackRequest) ProtoMessage() {}

func (x *PostProvisioningCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostProvisioningCallbackRequest.ProtoReflect.Descriptor instead.
func (*PostProvisioningCallbackRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{23}
}

func (x *PostProvisioningCallbackRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type PostProvisioningCallbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwitchConfiguration *ConfigureSwitchPortRequest `protobuf:"bytes,1,opt,name=switch_configuration,json=switchConfiguration,proto3" json:"switch_configuration,omitempty"`
	PlatformManagement  *PlatformManagement         `protobuf:"bytes,2,opt,name=platform_management,json=platformManagement,proto3" json:"platform_management,omitempty"`
}

func (x *PostProvisioningCallbackResponse) Reset() {
	*x = PostProvisioningCallbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostProvisioningCallbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostProvisioningCallbackResponse) ProtoMessage() {}

func (x *PostProvisioningCallbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostProvisioningCallbackResponse.ProtoReflect.Descriptor instead.
func (*PostProvisioningCallbackResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{24}
}

func (x *PostProvisioningCallbackResponse) GetSwitchConfiguration() *ConfigureSwitchPortRequest {
	if x != nil {
		return x.SwitchConfiguration
	}
	return nil
}

func (x *PostProvisioningCallbackResponse) GetPlatformManagement() *PlatformManagement {
	if x != nil {
		return x.PlatformManagement
	}
	return nil
}

type FinishProvisioningCallbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *FinishProvisioningCallbackRequest) Reset() {
	*x = FinishProvisioningCallbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishProvisioningCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishProvisioningCallbackRequest) ProtoMessage() {}

func (x *FinishProvisioningCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishProvisioningCallbackRequest.ProtoReflect.Descriptor instead.
func (*FinishProvisioningCallbackRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{25}
}

func (x *FinishProvisioningCallbackRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type ListPlatformManagementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformManagements []*PlatformManagement `protobuf:"bytes,1,rep,name=platform_managements,json=platformManagements,proto3" json:"platform_managements,omitempty"`
}

func (x *ListPlatformManagementsResponse) Reset() {
	*x = ListPlatformManagementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformManagementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformManagementsResponse) ProtoMessage() {}

func (x *ListPlatformManagementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformManagementsResponse.ProtoReflect.Descriptor instead.
func (*ListPlatformManagementsResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{26}
}

func (x *ListPlatformManagementsResponse) GetPlatformManagements() []*PlatformManagement {
	if x != nil {
		return x.PlatformManagements
	}
	return nil
}

type PostDeprovisioningCallbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *PostDeprovisioningCallbackRequest) Reset() {
	*x = PostDeprovisioningCallbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDeprovisioningCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDeprovisioningCallbackRequest) ProtoMessage() {}

func (x *PostDeprovisioningCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDeprovisioningCallbackRequest.ProtoReflect.Descriptor instead.
func (*PostDeprovisioningCallbackRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{27}
}

func (x *PostDeprovisioningCallbackRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type ServerMonitoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip  string        `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Tag MonitoringTag `protobuf:"varint,3,opt,name=tag,proto3,enum=api.server.MonitoringTag" json:"tag,omitempty"`
}

func (x *ServerMonitoring) Reset() {
	*x = ServerMonitoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMonitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMonitoring) ProtoMessage() {}

func (x *ServerMonitoring) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMonitoring.ProtoReflect.Descriptor instead.
func (*ServerMonitoring) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{28}
}

func (x *ServerMonitoring) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServerMonitoring) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ServerMonitoring) GetTag() MonitoringTag {
	if x != nil {
		return x.Tag
	}
	return MonitoringTag_MONITOR_PLATFORM_MANAGEMENT
}

type ListMonitoringTargetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Monitoring []*ServerMonitoring `protobuf:"bytes,1,rep,name=monitoring,proto3" json:"monitoring,omitempty"`
}

func (x *ListMonitoringTargetsResponse) Reset() {
	*x = ListMonitoringTargetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMonitoringTargetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitoringTargetsResponse) ProtoMessage() {}

func (x *ListMonitoringTargetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitoringTargetsResponse.ProtoReflect.Descriptor instead.
func (*ListMonitoringTargetsResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{29}
}

func (x *ListMonitoringTargetsResponse) GetMonitoring() []*ServerMonitoring {
	if x != nil {
		return x.Monitoring
	}
	return nil
}

type MonitoringStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip     string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Online bool   `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
}

func (x *MonitoringStatus) Reset() {
	*x = MonitoringStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitoringStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringStatus) ProtoMessage() {}

func (x *MonitoringStatus) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringStatus.ProtoReflect.Descriptor instead.
func (*MonitoringStatus) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{30}
}

func (x *MonitoringStatus) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *MonitoringStatus) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

type UpdateMonitoringStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []*MonitoringStatus `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateMonitoringStatusRequest) Reset() {
	*x = UpdateMonitoringStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMonitoringStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMonitoringStatusRequest) ProtoMessage() {}

func (x *UpdateMonitoringStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMonitoringStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateMonitoringStatusRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateMonitoringStatusRequest) GetStatus() []*MonitoringStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type AdminListAvailableServerResponse_AvailableServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Datacenter     string   `protobuf:"bytes,3,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	NetboxLink     string   `protobuf:"bytes,4,opt,name=netbox_link,json=netboxLink,proto3" json:"netbox_link,omitempty"`
	Flavour        string   `protobuf:"bytes,5,opt,name=flavour,proto3" json:"flavour,omitempty"`
	InventoryItems []string `protobuf:"bytes,6,rep,name=inventory_items,json=inventoryItems,proto3" json:"inventory_items,omitempty"`
}

func (x *AdminListAvailableServerResponse_AvailableServer) Reset() {
	*x = AdminListAvailableServerResponse_AvailableServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminListAvailableServerResponse_AvailableServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminListAvailableServerResponse_AvailableServer) ProtoMessage() {}

func (x *AdminListAvailableServerResponse_AvailableServer) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminListAvailableServerResponse_AvailableServer.ProtoReflect.Descriptor instead.
func (*AdminListAvailableServerResponse_AvailableServer) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7, 0}
}

func (x *AdminListAvailableServerResponse_AvailableServer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminListAvailableServerResponse_AvailableServer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminListAvailableServerResponse_AvailableServer) GetDatacenter() string {
	if x != nil {
		return x.Datacenter
	}
	return ""
}

func (x *AdminListAvailableServerResponse_AvailableServer) GetNetboxLink() string {
	if x != nil {
		return x.NetboxLink
	}
	return ""
}

func (x *AdminListAvailableServerResponse_AvailableServer) GetFlavour() string {
	if x != nil {
		return x.Flavour
	}
	return ""
}

func (x *AdminListAvailableServerResponse_AvailableServer) GetInventoryItems() []string {
	if x != nil {
		return x.InventoryItems
	}
	return nil
}

var File_server_proto protoreflect.FileDescriptor

var file_server_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x66, 0x6c, 0x61, 0x76, 0x6f, 0x75,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x02, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x6e, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6e, 0x63, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6e, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x6e, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xe4, 0x04, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x62,
	0x6f, 0x78, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x65, 0x74, 0x62, 0x6f, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2e, 0x0a, 0x07, 0x66, 0x6c, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x66, 0x6c, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x2e, 0x46, 0x6c, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x52, 0x07, 0x66, 0x6c, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x11, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x12, 0x5c, 0x0a, 0x18, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x16, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x09, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3f,
	0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x68, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x39, 0x0a, 0x18, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x62, 0x6f, 0x78, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x62, 0x6f,
	0x78, 0x49, 0x64, 0x73, 0x22, 0x5f, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0xb4, 0x02, 0x0a, 0x20, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x1a, 0xb9, 0x01, 0x0a, 0x0f, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x62,
	0x6f, 0x78, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x65, 0x74, 0x62, 0x6f, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x76,
	0x6f, 0x75, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x89, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x42, 0x6f, 0x6f, 0x74, 0x22, 0x67, 0x0a, 0x14, 0x53, 0x68, 0x75, 0x74,
	0x4f, 0x66, 0x66, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0xc7, 0x01, 0x0a, 0x21, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x68, 0x63, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x68, 0x63, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x69,
	0x70, 0x76, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x43, 0x69, 0x64, 0x72, 0x52, 0x04, 0x69, 0x70,
	0x76, 0x34, 0x12, 0x2b, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x43, 0x69, 0x64, 0x72, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x19, 0x0a, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x6c, 0x61, 0x6e, 0x54, 0x61, 0x67, 0x22, 0x85, 0x03, 0x0a, 0x22,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4f, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x12, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x58, 0x0a, 0x10, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x2f, 0x0a, 0x1d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x4e, 0x43, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x1e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x4e, 0x43, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4f, 0x0a, 0x0d, 0x56, 0x4e, 0x43, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x25, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x56, 0x4e, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x4e, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x2b, 0x0a, 0x03, 0x76, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x56, 0x4e, 0x43, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x76, 0x6e, 0x63, 0x22, 0x33, 0x0a,
	0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x78, 0x65, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x75, 0x6e,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x32, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x75, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x22, 0x6c, 0x0a, 0x23, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x39, 0x0a, 0x27, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x1b, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x03, 0x6a, 0x6f, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a,
	0x6f, 0x62, 0x22, 0x31, 0x0a, 0x1f, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0xcf, 0x01, 0x0a, 0x20, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x14, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x13, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x33, 0x0a, 0x21, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x74, 0x0a, 0x1f,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x14, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x13, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x33, 0x0a, 0x21, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x5f, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x2b, 0x0a, 0x03, 0x74,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x5d, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x3a, 0x0a, 0x10, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x22, 0x55, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0xa7, 0x01, 0x0a, 0x0c, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x53,
	0x45, 0x54, 0x55, 0x50, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4d, 0x41,
	0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x56,
	0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x50,
	0x4f, 0x53, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47,
	0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49,
	0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x07, 0x2a, 0x33, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4a, 0x6f,
	0x62, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x44, 0x45, 0x50, 0x52, 0x4f, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x50, 0x4d, 0x10,
	0x02, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x57, 0x10, 0x03, 0x2a, 0x2d, 0x0a, 0x16, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x44, 0x52, 0x41, 0x43, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x49, 0x4c, 0x4f, 0x35, 0x10, 0x01, 0x2a, 0x58, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x48, 0x55, 0x54, 0x5f, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48,
	0x55, 0x54, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x53, 0x45,
	0x54, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x50, 0x4c, 0x41,
	0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x03, 0x2a, 0x42, 0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x54, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x4f, 0x4e, 0x49, 0x54, 0x4f, 0x52, 0x5f, 0x50,
	0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x4e, 0x49, 0x54, 0x4f, 0x52, 0x5f,
	0x48, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x42, 0x16, 0x5a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x3b, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData = file_server_proto_rawDesc
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_rawDescData)
	})
	return file_server_proto_rawDescData
}

var file_server_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_server_proto_goTypes = []interface{}{
	(ServerStatus)(0),                                        // 0: api.server.ServerStatus
	(ServerJob)(0),                                           // 1: api.server.ServerJob
	(PlatformManagementType)(0),                              // 2: api.server.PlatformManagementType
	(ServerPowerStatus)(0),                                   // 3: api.server.ServerPowerStatus
	(MonitoringTag)(0),                                       // 4: api.server.MonitoringTag
	(*PlatformManagement)(nil),                               // 5: api.server.PlatformManagement
	(*Server)(nil),                                           // 6: api.server.Server
	(*ServerLog)(nil),                                        // 7: api.server.ServerLog
	(*AdminGetServerLogsRequest)(nil),                        // 8: api.server.AdminGetServerLogsRequest
	(*AdminGetServerLogsResponse)(nil),                       // 9: api.server.AdminGetServerLogsResponse
	(*AdminImportServerRequest)(nil),                         // 10: api.server.AdminImportServerRequest
	(*AdminImportServerResponse)(nil),                        // 11: api.server.AdminImportServerResponse
	(*AdminListAvailableServerResponse)(nil),                 // 12: api.server.AdminListAvailableServerResponse
	(*RebootServerRequest)(nil),                              // 13: api.server.RebootServerRequest
	(*ShutOffServerRequest)(nil),                             // 14: api.server.ShutOffServerRequest
	(*PlatformManagementNetworkSettings)(nil),                // 15: api.server.PlatformManagementNetworkSettings
	(*ConfigurePlatformManagementRequest)(nil),               // 16: api.server.ConfigurePlatformManagementRequest
	(*AdminGetServerVNCTokenRequest)(nil),                    // 17: api.server.AdminGetServerVNCTokenRequest
	(*AdminGetServerVNCTokenResponse)(nil),                   // 18: api.server.AdminGetServerVNCTokenResponse
	(*VNCConnection)(nil),                                    // 19: api.server.VNCConnection
	(*GetVNCRequest)(nil),                                    // 20: api.server.GetVNCRequest
	(*GetVNCResponse)(nil),                                   // 21: api.server.GetVNCResponse
	(*CreatePxeLinuxConfigRequest)(nil),                      // 22: api.server.CreatePxeLinuxConfigRequest
	(*GetAutoRunScriptRequest)(nil),                          // 23: api.server.GetAutoRunScriptRequest
	(*GetAutoRunScriptResponse)(nil),                         // 24: api.server.GetAutoRunScriptResponse
	(*AdminChangeServerPowerStatusRequest)(nil),              // 25: api.server.AdminChangeServerPowerStatusRequest
	(*AdminGetServerPlatformManagementRequest)(nil),          // 26: api.server.AdminGetServerPlatformManagementRequest
	(*AdminCreateServerJobRequest)(nil),                      // 27: api.server.AdminCreateServerJobRequest
	(*PostProvisioningCallbackRequest)(nil),                  // 28: api.server.PostProvisioningCallbackRequest
	(*PostProvisioningCallbackResponse)(nil),                 // 29: api.server.PostProvisioningCallbackResponse
	(*FinishProvisioningCallbackRequest)(nil),                // 30: api.server.FinishProvisioningCallbackRequest
	(*ListPlatformManagementsResponse)(nil),                  // 31: api.server.ListPlatformManagementsResponse
	(*PostDeprovisioningCallbackRequest)(nil),                // 32: api.server.PostDeprovisioningCallbackRequest
	(*ServerMonitoring)(nil),                                 // 33: api.server.ServerMonitoring
	(*ListMonitoringTargetsResponse)(nil),                    // 34: api.server.ListMonitoringTargetsResponse
	(*MonitoringStatus)(nil),                                 // 35: api.server.MonitoringStatus
	(*UpdateMonitoringStatusRequest)(nil),                    // 36: api.server.UpdateMonitoringStatusRequest
	(*AdminListAvailableServerResponse_AvailableServer)(nil), // 37: api.server.AdminListAvailableServerResponse.AvailableServer
	(*DataCenter)(nil),                                       // 38: api.region.DataCenter
	(*Flavour)(nil),                                          // 39: api.flavour.Flavour
	(*timestamppb.Timestamp)(nil),                            // 40: google.protobuf.Timestamp
	(*ServerInterface)(nil),                                  // 41: api.network.ServerInterface
	(*Cidr)(nil),                                             // 42: api.network.Cidr
	(*Switch)(nil),                                           // 43: api.network.Switch
	(*ConfigureSwitchPortRequest)(nil),                       // 44: api.network.ConfigureSwitchPortRequest
}
var file_server_proto_depIdxs = []int32{
	2,  // 0: api.server.PlatformManagement.type:type_name -> api.server.PlatformManagementType
	38, // 1: api.server.Server.datacenter:type_name -> api.region.DataCenter
	39, // 2: api.server.Server.flavour:type_name -> api.flavour.Flavour
	0,  // 3: api.server.Server.status:type_name -> api.server.ServerStatus
	40, // 4: api.server.Server.status_updated_at:type_name -> google.protobuf.Timestamp
	41, // 5: api.server.Server.interfaces:type_name -> api.network.ServerInterface
	2,  // 6: api.server.Server.platform_management_type:type_name -> api.server.PlatformManagementType
	40, // 7: api.server.Server.created_at:type_name -> google.protobuf.Timestamp
	40, // 8: api.server.Server.updated_at:type_name -> google.protobuf.Timestamp
	40, // 9: api.server.ServerLog.created_at:type_name -> google.protobuf.Timestamp
	40, // 10: api.server.ServerLog.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 11: api.server.AdminGetServerLogsResponse.logs:type_name -> api.server.ServerLog
	6,  // 12: api.server.AdminImportServerResponse.server:type_name -> api.server.Server
	37, // 13: api.server.AdminListAvailableServerResponse.server:type_name -> api.server.AdminListAvailableServerResponse.AvailableServer
	5,  // 14: api.server.RebootServerRequest.platform_management:type_name -> api.server.PlatformManagement
	5,  // 15: api.server.ShutOffServerRequest.platform_management:type_name -> api.server.PlatformManagement
	42, // 16: api.server.PlatformManagementNetworkSettings.ipv4:type_name -> api.network.Cidr
	42, // 17: api.server.PlatformManagementNetworkSettings.gateway:type_name -> api.network.Cidr
	5,  // 18: api.server.ConfigurePlatformManagementRequest.platform_management:type_name -> api.server.PlatformManagement
	43, // 19: api.server.ConfigurePlatformManagementRequest.switch:type_name -> api.network.Switch
	15, // 20: api.server.ConfigurePlatformManagementRequest.network_settings:type_name -> api.server.PlatformManagementNetworkSettings
	19, // 21: api.server.GetVNCResponse.vnc:type_name -> api.server.VNCConnection
	3,  // 22: api.server.AdminChangeServerPowerStatusRequest.status:type_name -> api.server.ServerPowerStatus
	1,  // 23: api.server.AdminCreateServerJobRequest.job:type_name -> api.server.ServerJob
	44, // 24: api.server.PostProvisioningCallbackResponse.switch_configuration:type_name -> api.network.ConfigureSwitchPortRequest
	5,  // 25: api.server.PostProvisioningCallbackResponse.platform_management:type_name -> api.server.PlatformManagement
	5,  // 26: api.server.ListPlatformManagementsResponse.platform_managements:type_name -> api.server.PlatformManagement
	4,  // 27: api.server.ServerMonitoring.tag:type_name -> api.server.MonitoringTag
	33, // 28: api.server.ListMonitoringTargetsResponse.monitoring:type_name -> api.server.ServerMonitoring
	35, // 29: api.server.UpdateMonitoringStatusRequest.status:type_name -> api.server.MonitoringStatus
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	file_network_proto_init()
	file_region_proto_init()
	file_flavour_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformManagement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetServerLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetServerLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminImportServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminImportServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminListAvailableServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebootServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutOffServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformManagementNetworkSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurePlatformManagementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetServerVNCTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetServerVNCTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VNCConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVNCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVNCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePxeLinuxConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAutoRunScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAutoRunScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminChangeServerPowerStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminGetServerPlatformManagementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCreateServerJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostProvisioningCallbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostProvisioningCallbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishProvisioningCallbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformManagementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDeprovisioningCallbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMonitoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMonitoringTargetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitoringStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMonitoringStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminListAvailableServerResponse_AvailableServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		EnumInfos:         file_server_proto_enumTypes,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_rawDesc = nil
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}
