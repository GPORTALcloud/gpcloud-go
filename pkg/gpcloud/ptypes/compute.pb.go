// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: ptypes/compute.proto

package ptypes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComputeResourceStatus int32

const (
	ComputeResourceStatus_UNKNOWN         ComputeResourceStatus = 0
	ComputeResourceStatus_INSTALLING      ComputeResourceStatus = 1
	ComputeResourceStatus_POST_INSTALLING ComputeResourceStatus = 2
	ComputeResourceStatus_READY           ComputeResourceStatus = 3
	ComputeResourceStatus_ONLINE          ComputeResourceStatus = 4
	ComputeResourceStatus_RESCUE_MODE     ComputeResourceStatus = 5
)

// Enum value maps for ComputeResourceStatus.
var (
	ComputeResourceStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "INSTALLING",
		2: "POST_INSTALLING",
		3: "READY",
		4: "ONLINE",
		5: "RESCUE_MODE",
	}
	ComputeResourceStatus_value = map[string]int32{
		"UNKNOWN":         0,
		"INSTALLING":      1,
		"POST_INSTALLING": 2,
		"READY":           3,
		"ONLINE":          4,
		"RESCUE_MODE":     5,
	}
)

func (x ComputeResourceStatus) Enum() *ComputeResourceStatus {
	p := new(ComputeResourceStatus)
	*p = x
	return p
}

func (x ComputeResourceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComputeResourceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ptypes_compute_proto_enumTypes[0].Descriptor()
}

func (ComputeResourceStatus) Type() protoreflect.EnumType {
	return &file_ptypes_compute_proto_enumTypes[0]
}

func (x ComputeResourceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComputeResourceStatus.Descriptor instead.
func (ComputeResourceStatus) EnumDescriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{0}
}

type ComputeResourceRenewState int32

const (
	ComputeResourceRenewState_COMPUTE_RESOURCE_RENEW_STATE_EXTEND    ComputeResourceRenewState = 0
	ComputeResourceRenewState_COMPUTE_RESOURCE_RENEW_STATE_DELETE    ComputeResourceRenewState = 1
	ComputeResourceRenewState_COMPUTE_RESOURCE_RENEW_STATE_TO_HOURLY ComputeResourceRenewState = 2
)

// Enum value maps for ComputeResourceRenewState.
var (
	ComputeResourceRenewState_name = map[int32]string{
		0: "COMPUTE_RESOURCE_RENEW_STATE_EXTEND",
		1: "COMPUTE_RESOURCE_RENEW_STATE_DELETE",
		2: "COMPUTE_RESOURCE_RENEW_STATE_TO_HOURLY",
	}
	ComputeResourceRenewState_value = map[string]int32{
		"COMPUTE_RESOURCE_RENEW_STATE_EXTEND":    0,
		"COMPUTE_RESOURCE_RENEW_STATE_DELETE":    1,
		"COMPUTE_RESOURCE_RENEW_STATE_TO_HOURLY": 2,
	}
)

func (x ComputeResourceRenewState) Enum() *ComputeResourceRenewState {
	p := new(ComputeResourceRenewState)
	*p = x
	return p
}

func (x ComputeResourceRenewState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComputeResourceRenewState) Descriptor() protoreflect.EnumDescriptor {
	return file_ptypes_compute_proto_enumTypes[1].Descriptor()
}

func (ComputeResourceRenewState) Type() protoreflect.EnumType {
	return &file_ptypes_compute_proto_enumTypes[1]
}

func (x ComputeResourceRenewState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComputeResourceRenewState.Descriptor instead.
func (ComputeResourceRenewState) EnumDescriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{1}
}

type RescueMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enables / disabled the resource mode
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Defines the rescue mode password
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RescueMode) Reset() {
	*x = RescueMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RescueMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescueMode) ProtoMessage() {}

func (x *RescueMode) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescueMode.ProtoReflect.Descriptor instead.
func (*RescueMode) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{0}
}

func (x *RescueMode) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RescueMode) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Provisioning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fqdn     string    `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Image    *Image    `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	UserData string    `protobuf:"bytes,3,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	SshKeys  []*SSHKey `protobuf:"bytes,4,rep,name=ssh_keys,json=sshKeys,proto3" json:"ssh_keys,omitempty"`
	Password string    `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Provisioning) Reset() {
	*x = Provisioning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provisioning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provisioning) ProtoMessage() {}

func (x *Provisioning) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provisioning.ProtoReflect.Descriptor instead.
func (*Provisioning) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{1}
}

func (x *Provisioning) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *Provisioning) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Provisioning) GetUserData() string {
	if x != nil {
		return x.UserData
	}
	return ""
}

func (x *Provisioning) GetSshKeys() []*SSHKey {
	if x != nil {
		return x.SshKeys
	}
	return nil
}

func (x *Provisioning) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ComputeResourceIp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   string      `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Mac  string      `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	Type NetworkType `protobuf:"varint,3,opt,name=type,proto3,enum=api.network.NetworkType" json:"type,omitempty"`
}

func (x *ComputeResourceIp) Reset() {
	*x = ComputeResourceIp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeResourceIp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeResourceIp) ProtoMessage() {}

func (x *ComputeResourceIp) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeResourceIp.ProtoReflect.Descriptor instead.
func (*ComputeResourceIp) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{2}
}

func (x *ComputeResourceIp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ComputeResourceIp) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *ComputeResourceIp) GetType() NetworkType {
	if x != nil {
		return x.Type
	}
	return NetworkType_MANAGEMENT
}

type ComputeResourceJobStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobStartedAt         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=job_started_at,json=jobStartedAt,proto3" json:"job_started_at,omitempty"`
	JobEstimatedFinishAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=job_estimated_finish_at,json=jobEstimatedFinishAt,proto3" json:"job_estimated_finish_at,omitempty"`
}

func (x *ComputeResourceJobStatus) Reset() {
	*x = ComputeResourceJobStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeResourceJobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeResourceJobStatus) ProtoMessage() {}

func (x *ComputeResourceJobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeResourceJobStatus.ProtoReflect.Descriptor instead.
func (*ComputeResourceJobStatus) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{3}
}

func (x *ComputeResourceJobStatus) GetJobStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JobStartedAt
	}
	return nil
}

func (x *ComputeResourceJobStatus) GetJobEstimatedFinishAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JobEstimatedFinishAt
	}
	return nil
}

type ComputeResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Compute resource ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Fully qualified domain name
	Fqdn string `protobuf:"bytes,2,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	// All compute resource ips
	Ips []*ComputeResourceIp `protobuf:"bytes,3,rep,name=ips,proto3" json:"ips,omitempty"`
	// Type of compute resource (e.g. Bare metal)
	Type ComputeResourceType `protobuf:"varint,5,opt,name=type,proto3,enum=api.ComputeResourceType" json:"type,omitempty"`
	// Current status
	Status ComputeResourceStatus `protobuf:"varint,6,opt,name=status,proto3,enum=api.compute.ComputeResourceStatus" json:"status,omitempty"`
	// All compute resource tags
	Tags map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Datacenter
	Datacenter *DataCenter `protobuf:"bytes,8,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	// Rescue mode status
	RescueMode *RescueMode `protobuf:"bytes,9,opt,name=rescue_mode,json=rescueMode,proto3" json:"rescue_mode,omitempty"`
	// The active compute resource flavour
	Flavour *Flavour `protobuf:"bytes,10,opt,name=flavour,proto3" json:"flavour,omitempty"`
	// Active compute resource image
	Image *Image `protobuf:"bytes,11,opt,name=image,proto3" json:"image,omitempty"`
	// The price per hour for this compute resource
	Price *Price `protobuf:"bytes,12,opt,name=price,proto3" json:"price,omitempty"`
	// Tells if the compute resource has a valid Windows SPLA license for this month
	SplaLicense bool `protobuf:"varint,13,opt,name=spla_license,json=splaLicense,proto3" json:"spla_license,omitempty"`
	// Server
	Server           *Server                   `protobuf:"bytes,14,opt,name=server,proto3" json:"server,omitempty"`
	CreatedAt        *timestamppb.Timestamp    `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	JobStatus        *ComputeResourceJobStatus `protobuf:"bytes,16,opt,name=job_status,json=jobStatus,proto3" json:"job_status,omitempty"`
	ProjectId        string                    `protobuf:"bytes,17,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	HasConsoleAccess bool                      `protobuf:"varint,18,opt,name=has_console_access,json=hasConsoleAccess,proto3" json:"has_console_access,omitempty"`
	BillingPeriod    BillingPeriod             `protobuf:"varint,19,opt,name=billing_period,json=billingPeriod,proto3,enum=api.billing.BillingPeriod" json:"billing_period,omitempty"`
	// When billing period is MONTHLY, you can see until when the server is already paid
	PaidUntil *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=paid_until,json=paidUntil,proto3" json:"paid_until,omitempty"`
	// Renew state for billing period MONTHLY
	RenewState ComputeResourceRenewState `protobuf:"varint,21,opt,name=renew_state,json=renewState,proto3,enum=api.compute.ComputeResourceRenewState" json:"renew_state,omitempty"`
}

func (x *ComputeResource) Reset() {
	*x = ComputeResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeResource) ProtoMessage() {}

func (x *ComputeResource) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeResource.ProtoReflect.Descriptor instead.
func (*ComputeResource) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{4}
}

func (x *ComputeResource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComputeResource) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *ComputeResource) GetIps() []*ComputeResourceIp {
	if x != nil {
		return x.Ips
	}
	return nil
}

func (x *ComputeResource) GetType() ComputeResourceType {
	if x != nil {
		return x.Type
	}
	return ComputeResourceType_BARE_METAL
}

func (x *ComputeResource) GetStatus() ComputeResourceStatus {
	if x != nil {
		return x.Status
	}
	return ComputeResourceStatus_UNKNOWN
}

func (x *ComputeResource) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ComputeResource) GetDatacenter() *DataCenter {
	if x != nil {
		return x.Datacenter
	}
	return nil
}

func (x *ComputeResource) GetRescueMode() *RescueMode {
	if x != nil {
		return x.RescueMode
	}
	return nil
}

func (x *ComputeResource) GetFlavour() *Flavour {
	if x != nil {
		return x.Flavour
	}
	return nil
}

func (x *ComputeResource) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ComputeResource) GetPrice() *Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *ComputeResource) GetSplaLicense() bool {
	if x != nil {
		return x.SplaLicense
	}
	return false
}

func (x *ComputeResource) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *ComputeResource) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ComputeResource) GetJobStatus() *ComputeResourceJobStatus {
	if x != nil {
		return x.JobStatus
	}
	return nil
}

func (x *ComputeResource) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ComputeResource) GetHasConsoleAccess() bool {
	if x != nil {
		return x.HasConsoleAccess
	}
	return false
}

func (x *ComputeResource) GetBillingPeriod() BillingPeriod {
	if x != nil {
		return x.BillingPeriod
	}
	return BillingPeriod_BILLING_PERIOD_HOURLY
}

func (x *ComputeResource) GetPaidUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.PaidUntil
	}
	return nil
}

func (x *ComputeResource) GetRenewState() ComputeResourceRenewState {
	if x != nil {
		return x.RenewState
	}
	return ComputeResourceRenewState_COMPUTE_RESOURCE_RENEW_STATE_EXTEND
}

type ComputeResourceProvisioning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserData string                             `protobuf:"bytes,2,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	Image    *ComputeResourceProvisioning_Image `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Password string                             `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	SshKeys  []string                           `protobuf:"bytes,5,rep,name=ssh_keys,json=sshKeys,proto3" json:"ssh_keys,omitempty"`
}

func (x *ComputeResourceProvisioning) Reset() {
	*x = ComputeResourceProvisioning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeResourceProvisioning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeResourceProvisioning) ProtoMessage() {}

func (x *ComputeResourceProvisioning) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeResourceProvisioning.ProtoReflect.Descriptor instead.
func (*ComputeResourceProvisioning) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{5}
}

func (x *ComputeResourceProvisioning) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComputeResourceProvisioning) GetUserData() string {
	if x != nil {
		return x.UserData
	}
	return ""
}

func (x *ComputeResourceProvisioning) GetImage() *ComputeResourceProvisioning_Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ComputeResourceProvisioning) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ComputeResourceProvisioning) GetSshKeys() []string {
	if x != nil {
		return x.SshKeys
	}
	return nil
}

type GetComputeResourceTrafficRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *GetComputeResourceTrafficRequest) Reset() {
	*x = GetComputeResourceTrafficRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComputeResourceTrafficRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputeResourceTrafficRequest) ProtoMessage() {}

func (x *GetComputeResourceTrafficRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputeResourceTrafficRequest.ProtoReflect.Descriptor instead.
func (*GetComputeResourceTrafficRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{6}
}

func (x *GetComputeResourceTrafficRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComputeResourceTrafficRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type GetComputeResourceTrafficResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usage []*TrafficUsage `protobuf:"bytes,1,rep,name=usage,proto3" json:"usage,omitempty"`
}

func (x *GetComputeResourceTrafficResponse) Reset() {
	*x = GetComputeResourceTrafficResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComputeResourceTrafficResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputeResourceTrafficResponse) ProtoMessage() {}

func (x *GetComputeResourceTrafficResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputeResourceTrafficResponse.ProtoReflect.Descriptor instead.
func (*GetComputeResourceTrafficResponse) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{7}
}

func (x *GetComputeResourceTrafficResponse) GetUsage() []*TrafficUsage {
	if x != nil {
		return x.Usage
	}
	return nil
}

type TrafficUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip      string               `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Traffic []*TrafficUsageEntry `protobuf:"bytes,2,rep,name=traffic,proto3" json:"traffic,omitempty"`
}

func (x *TrafficUsage) Reset() {
	*x = TrafficUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficUsage) ProtoMessage() {}

func (x *TrafficUsage) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficUsage.ProtoReflect.Descriptor instead.
func (*TrafficUsage) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{8}
}

func (x *TrafficUsage) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *TrafficUsage) GetTraffic() []*TrafficUsageEntry {
	if x != nil {
		return x.Traffic
	}
	return nil
}

type TrafficUsageEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp       *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BytesReceived   int64                  `protobuf:"varint,2,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	PacketsReceived int64                  `protobuf:"varint,3,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	BytesSent       int64                  `protobuf:"varint,4,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	PacketsSent     int64                  `protobuf:"varint,5,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
}

func (x *TrafficUsageEntry) Reset() {
	*x = TrafficUsageEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficUsageEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficUsageEntry) ProtoMessage() {}

func (x *TrafficUsageEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficUsageEntry.ProtoReflect.Descriptor instead.
func (*TrafficUsageEntry) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{9}
}

func (x *TrafficUsageEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TrafficUsageEntry) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *TrafficUsageEntry) GetPacketsReceived() int64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *TrafficUsageEntry) GetBytesSent() int64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *TrafficUsageEntry) GetPacketsSent() int64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

type CreateComputeResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Project ID to add compute resources
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Flavour ID
	FlavourId string `protobuf:"bytes,2,opt,name=flavour_id,json=flavourId,proto3" json:"flavour_id,omitempty"`
	// Datacenter ID
	DatacenterId string `protobuf:"bytes,3,opt,name=datacenter_id,json=datacenterId,proto3" json:"datacenter_id,omitempty"`
	// Server administration password
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// SSH authorized keys
	SshKeyIds []string `protobuf:"bytes,5,rep,name=ssh_key_ids,json=sshKeyIds,proto3" json:"ssh_key_ids,omitempty"`
	// Image ID of selected OS image
	ImageId string `protobuf:"bytes,6,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// User data script (Bash, Powershell,...)
	UserData string `protobuf:"bytes,7,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	// Array of host FQDNs
	Hosts []string `protobuf:"bytes,8,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// Additional network ids
	NetworkIds []string `protobuf:"bytes,9,rep,name=network_ids,json=networkIds,proto3" json:"network_ids,omitempty"`
	// Billing period for compute resource
	BillingPeriod BillingPeriod `protobuf:"varint,10,opt,name=billing_period,json=billingPeriod,proto3,enum=api.billing.BillingPeriod" json:"billing_period,omitempty"`
}

func (x *CreateComputeResourceRequest) Reset() {
	*x = CreateComputeResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateComputeResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComputeResourceRequest) ProtoMessage() {}

func (x *CreateComputeResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComputeResourceRequest.ProtoReflect.Descriptor instead.
func (*CreateComputeResourceRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{10}
}

func (x *CreateComputeResourceRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateComputeResourceRequest) GetFlavourId() string {
	if x != nil {
		return x.FlavourId
	}
	return ""
}

func (x *CreateComputeResourceRequest) GetDatacenterId() string {
	if x != nil {
		return x.DatacenterId
	}
	return ""
}

func (x *CreateComputeResourceRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateComputeResourceRequest) GetSshKeyIds() []string {
	if x != nil {
		return x.SshKeyIds
	}
	return nil
}

func (x *CreateComputeResourceRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *CreateComputeResourceRequest) GetUserData() string {
	if x != nil {
		return x.UserData
	}
	return ""
}

func (x *CreateComputeResourceRequest) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *CreateComputeResourceRequest) GetNetworkIds() []string {
	if x != nil {
		return x.NetworkIds
	}
	return nil
}

func (x *CreateComputeResourceRequest) GetBillingPeriod() BillingPeriod {
	if x != nil {
		return x.BillingPeriod
	}
	return BillingPeriod_BILLING_PERIOD_HOURLY
}

type CreateComputeResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*ComputeResource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *CreateComputeResourceResponse) Reset() {
	*x = CreateComputeResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateComputeResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComputeResourceResponse) ProtoMessage() {}

func (x *CreateComputeResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComputeResourceResponse.ProtoReflect.Descriptor instead.
func (*CreateComputeResourceResponse) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{11}
}

func (x *CreateComputeResourceResponse) GetResources() []*ComputeResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ListComputeResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// page number to load
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// optional
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *ListComputeResourcesRequest) Reset() {
	*x = ListComputeResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComputeResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComputeResourcesRequest) ProtoMessage() {}

func (x *ListComputeResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComputeResourcesRequest.ProtoReflect.Descriptor instead.
func (*ListComputeResourcesRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{12}
}

func (x *ListComputeResourcesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListComputeResourcesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListComputeResourcesRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type ListComputeResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*ComputeResource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	// Number of pages available
	PagesTotal int32 `protobuf:"varint,2,opt,name=pages_total,json=pagesTotal,proto3" json:"pages_total,omitempty"`
}

func (x *ListComputeResourcesResponse) Reset() {
	*x = ListComputeResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComputeResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComputeResourcesResponse) ProtoMessage() {}

func (x *ListComputeResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComputeResourcesResponse.ProtoReflect.Descriptor instead.
func (*ListComputeResourcesResponse) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{13}
}

func (x *ListComputeResourcesResponse) GetResources() []*ComputeResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ListComputeResourcesResponse) GetPagesTotal() int32 {
	if x != nil {
		return x.PagesTotal
	}
	return 0
}

type GetComputeResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *GetComputeResourceRequest) Reset() {
	*x = GetComputeResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComputeResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputeResourceRequest) ProtoMessage() {}

func (x *GetComputeResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputeResourceRequest.ProtoReflect.Descriptor instead.
func (*GetComputeResourceRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{14}
}

func (x *GetComputeResourceRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComputeResourceRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type GetComputeResourceConsoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *GetComputeResourceConsoleRequest) Reset() {
	*x = GetComputeResourceConsoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComputeResourceConsoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputeResourceConsoleRequest) ProtoMessage() {}

func (x *GetComputeResourceConsoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputeResourceConsoleRequest.ProtoReflect.Descriptor instead.
func (*GetComputeResourceConsoleRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{15}
}

func (x *GetComputeResourceConsoleRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComputeResourceConsoleRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type GetComputeResourceConsoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GetComputeResourceConsoleResponse) Reset() {
	*x = GetComputeResourceConsoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComputeResourceConsoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputeResourceConsoleResponse) ProtoMessage() {}

func (x *GetComputeResourceConsoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputeResourceConsoleResponse.ProtoReflect.Descriptor instead.
func (*GetComputeResourceConsoleResponse) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{16}
}

func (x *GetComputeResourceConsoleResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetComputeResourceConsoleResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UpdateComputeResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string            `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceId string            `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Fqdn       string            `protobuf:"bytes,3,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Tags       map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateComputeResourceRequest) Reset() {
	*x = UpdateComputeResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComputeResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComputeResourceRequest) ProtoMessage() {}

func (x *UpdateComputeResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComputeResourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateComputeResourceRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateComputeResourceRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateComputeResourceRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *UpdateComputeResourceRequest) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *UpdateComputeResourceRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ReinstallComputeResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// New server FQDN
	// If no FQDN is being provided, the old FQDN will be used
	Fqdn string `protobuf:"bytes,3,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	// Server administration password
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// SSH authorized keys
	SshKeyIds []string `protobuf:"bytes,5,rep,name=ssh_key_ids,json=sshKeyIds,proto3" json:"ssh_key_ids,omitempty"`
	// Image ID of selected OS image
	ImageId string `protobuf:"bytes,6,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// User data script (Cloud-Init, Cloudbase-Init, Bash, Powershell,...)
	UserData string `protobuf:"bytes,7,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
}

func (x *ReinstallComputeResourceRequest) Reset() {
	*x = ReinstallComputeResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReinstallComputeResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReinstallComputeResourceRequest) ProtoMessage() {}

func (x *ReinstallComputeResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReinstallComputeResourceRequest.ProtoReflect.Descriptor instead.
func (*ReinstallComputeResourceRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{18}
}

func (x *ReinstallComputeResourceRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ReinstallComputeResourceRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ReinstallComputeResourceRequest) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *ReinstallComputeResourceRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ReinstallComputeResourceRequest) GetSshKeyIds() []string {
	if x != nil {
		return x.SshKeyIds
	}
	return nil
}

func (x *ReinstallComputeResourceRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *ReinstallComputeResourceRequest) GetUserData() string {
	if x != nil {
		return x.UserData
	}
	return ""
}

type ChangeComputeResourceRenewStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string                    `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceId string                    `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	RenewState ComputeResourceRenewState `protobuf:"varint,3,opt,name=renew_state,json=renewState,proto3,enum=api.compute.ComputeResourceRenewState" json:"renew_state,omitempty"`
}

func (x *ChangeComputeResourceRenewStateRequest) Reset() {
	*x = ChangeComputeResourceRenewStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeComputeResourceRenewStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeComputeResourceRenewStateRequest) ProtoMessage() {}

func (x *ChangeComputeResourceRenewStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeComputeResourceRenewStateRequest.ProtoReflect.Descriptor instead.
func (*ChangeComputeResourceRenewStateRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{19}
}

func (x *ChangeComputeResourceRenewStateRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ChangeComputeResourceRenewStateRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ChangeComputeResourceRenewStateRequest) GetRenewState() ComputeResourceRenewState {
	if x != nil {
		return x.RenewState
	}
	return ComputeResourceRenewState_COMPUTE_RESOURCE_RENEW_STATE_EXTEND
}

type DestroyComputeResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *DestroyComputeResourceRequest) Reset() {
	*x = DestroyComputeResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyComputeResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyComputeResourceRequest) ProtoMessage() {}

func (x *DestroyComputeResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyComputeResourceRequest.ProtoReflect.Descriptor instead.
func (*DestroyComputeResourceRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{20}
}

func (x *DestroyComputeResourceRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DestroyComputeResourceRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type PowerActionComputeResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string            `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceId string            `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Status     ServerPowerStatus `protobuf:"varint,3,opt,name=status,proto3,enum=api.server.ServerPowerStatus" json:"status,omitempty"`
}

func (x *PowerActionComputeResourceRequest) Reset() {
	*x = PowerActionComputeResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerActionComputeResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerActionComputeResourceRequest) ProtoMessage() {}

func (x *PowerActionComputeResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerActionComputeResourceRequest.ProtoReflect.Descriptor instead.
func (*PowerActionComputeResourceRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{21}
}

func (x *PowerActionComputeResourceRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *PowerActionComputeResourceRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *PowerActionComputeResourceRequest) GetStatus() ServerPowerStatus {
	if x != nil {
		return x.Status
	}
	return ServerPowerStatus_SHUT_ON
}

type ComputeResourceRescueModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string      `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceId string      `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	RescueMode *RescueMode `protobuf:"bytes,3,opt,name=rescue_mode,json=rescueMode,proto3" json:"rescue_mode,omitempty"`
}

func (x *ComputeResourceRescueModeRequest) Reset() {
	*x = ComputeResourceRescueModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeResourceRescueModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeResourceRescueModeRequest) ProtoMessage() {}

func (x *ComputeResourceRescueModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeResourceRescueModeRequest.ProtoReflect.Descriptor instead.
func (*ComputeResourceRescueModeRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{22}
}

func (x *ComputeResourceRescueModeRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ComputeResourceRescueModeRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ComputeResourceRescueModeRequest) GetRescueMode() *RescueMode {
	if x != nil {
		return x.RescueMode
	}
	return nil
}

type GetComputeResourcePricingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *GetComputeResourcePricingRequest) Reset() {
	*x = GetComputeResourcePricingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComputeResourcePricingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputeResourcePricingRequest) ProtoMessage() {}

func (x *GetComputeResourcePricingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputeResourcePricingRequest.ProtoReflect.Descriptor instead.
func (*GetComputeResourcePricingRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{23}
}

func (x *GetComputeResourcePricingRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComputeResourcePricingRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type GetComputeResourcePricingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPrice         *Price        `protobuf:"bytes,1,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	CurrentBillingPeriod BillingPeriod `protobuf:"varint,2,opt,name=current_billing_period,json=currentBillingPeriod,proto3,enum=api.billing.BillingPeriod" json:"current_billing_period,omitempty"`
	NewMonthlyPricing    *Price        `protobuf:"bytes,3,opt,name=new_monthly_pricing,json=newMonthlyPricing,proto3" json:"new_monthly_pricing,omitempty"`
	NewHourlyPricing     *Price        `protobuf:"bytes,4,opt,name=new_hourly_pricing,json=newHourlyPricing,proto3" json:"new_hourly_pricing,omitempty"`
}

func (x *GetComputeResourcePricingResponse) Reset() {
	*x = GetComputeResourcePricingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComputeResourcePricingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputeResourcePricingResponse) ProtoMessage() {}

func (x *GetComputeResourcePricingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputeResourcePricingResponse.ProtoReflect.Descriptor instead.
func (*GetComputeResourcePricingResponse) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{24}
}

func (x *GetComputeResourcePricingResponse) GetCurrentPrice() *Price {
	if x != nil {
		return x.CurrentPrice
	}
	return nil
}

func (x *GetComputeResourcePricingResponse) GetCurrentBillingPeriod() BillingPeriod {
	if x != nil {
		return x.CurrentBillingPeriod
	}
	return BillingPeriod_BILLING_PERIOD_HOURLY
}

func (x *GetComputeResourcePricingResponse) GetNewMonthlyPricing() *Price {
	if x != nil {
		return x.NewMonthlyPricing
	}
	return nil
}

func (x *GetComputeResourcePricingResponse) GetNewHourlyPricing() *Price {
	if x != nil {
		return x.NewHourlyPricing
	}
	return nil
}

type ChangeComputeResourceBillingPeriodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId     string        `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ResourceId    string        `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	BillingPeriod BillingPeriod `protobuf:"varint,3,opt,name=billing_period,json=billingPeriod,proto3,enum=api.billing.BillingPeriod" json:"billing_period,omitempty"`
}

func (x *ChangeComputeResourceBillingPeriodRequest) Reset() {
	*x = ChangeComputeResourceBillingPeriodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeComputeResourceBillingPeriodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeComputeResourceBillingPeriodRequest) ProtoMessage() {}

func (x *ChangeComputeResourceBillingPeriodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeComputeResourceBillingPeriodRequest.ProtoReflect.Descriptor instead.
func (*ChangeComputeResourceBillingPeriodRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{25}
}

func (x *ChangeComputeResourceBillingPeriodRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ChangeComputeResourceBillingPeriodRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ChangeComputeResourceBillingPeriodRequest) GetBillingPeriod() BillingPeriod {
	if x != nil {
		return x.BillingPeriod
	}
	return BillingPeriod_BILLING_PERIOD_HOURLY
}

type ComputeResourceProvisioning_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ComputeResourceProvisioning_Image) Reset() {
	*x = ComputeResourceProvisioning_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_compute_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeResourceProvisioning_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeResourceProvisioning_Image) ProtoMessage() {}

func (x *ComputeResourceProvisioning_Image) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_compute_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeResourceProvisioning_Image.ProtoReflect.Descriptor instead.
func (*ComputeResourceProvisioning_Image) Descriptor() ([]byte, []int) {
	return file_ptypes_compute_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ComputeResourceProvisioning_Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComputeResourceProvisioning_Image) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_ptypes_compute_proto protoreflect.FileDescriptor

var file_ptypes_compute_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x66, 0x6c,
	0x61, 0x76, 0x6f, 0x75, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x42, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x63, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2f, 0x0a, 0x08, 0x73, 0x73, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x2e, 0x53, 0x53, 0x48, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x73, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x63, 0x0a, 0x11,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x61, 0x63, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xaf, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40,
	0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x51, 0x0a, 0x17, 0x6a, 0x6f, 0x62, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x6a,
	0x6f, 0x62, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x41, 0x74, 0x22, 0x96, 0x08, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x30, 0x0a, 0x03, 0x69,
	0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x70, 0x52, 0x03, 0x69, 0x70, 0x73, 0x12, 0x2c, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x63, 0x75, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x63, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x63, 0x75,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x6c, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x2e, 0x46, 0x6c, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x52, 0x07, 0x66, 0x6c,
	0x61, 0x76, 0x6f, 0x75, 0x72, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x70, 0x6c, 0x61, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x70, 0x6c, 0x61, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x44, 0x0a, 0x0a, 0x6a, 0x6f, 0x62,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x73, 0x43,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x41, 0x0a, 0x0e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x70, 0x61, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x47, 0x0a, 0x0b, 0x72, 0x65,
	0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf4, 0x01, 0x0a,
	0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x73, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x73, 0x68, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x2b, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x22, 0x58, 0x0a,
	0x0c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x38, 0x0a,
	0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x55, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x22, 0xe1, 0x01, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x55, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x62, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x22, 0xef, 0x02, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x6c, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x6c, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x73,
	0x73, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0d,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x5b, 0x0a,
	0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x68, 0x0a, 0x1b, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x22, 0x7b, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x73, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x5b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x55, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x1c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71,
	0x64, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x47,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xe9, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x73, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x73, 0x68, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb1, 0x01, 0x0a,
	0x26, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0b, 0x72, 0x65, 0x6e, 0x65, 0x77,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x5f, 0x0a, 0x1d, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x9a, 0x01, 0x0a, 0x21, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9c,
	0x01, 0x0a, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x63, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x63, 0x75, 0x65, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x63, 0x75, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x63, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x62, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x9c, 0x02, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x16, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x52, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3a, 0x0a, 0x13, 0x6e, 0x65,
	0x77, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x12, 0x6e, 0x65, 0x77, 0x5f, 0x68, 0x6f,
	0x75, 0x72, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x10,
	0x6e, 0x65, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67,
	0x22, 0xae, 0x01, 0x0a, 0x29, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x2a, 0x71, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x53, 0x54, 0x41,
	0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x4f, 0x53, 0x54, 0x5f,
	0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05,
	0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x53, 0x43, 0x55, 0x45, 0x5f, 0x4d, 0x4f,
	0x44, 0x45, 0x10, 0x05, 0x2a, 0x99, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x43,
	0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x52, 0x45, 0x4e, 0x45, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x01, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x4c, 0x59, 0x10, 0x02,
	0x42, 0x82, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x42, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x70, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x41, 0x43, 0x58,
	0xaa, 0x02, 0x0b, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0xca, 0x02,
	0x0b, 0x41, 0x70, 0x69, 0x5c, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0xe2, 0x02, 0x17, 0x41,
	0x70, 0x69, 0x5c, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ptypes_compute_proto_rawDescOnce sync.Once
	file_ptypes_compute_proto_rawDescData = file_ptypes_compute_proto_rawDesc
)

func file_ptypes_compute_proto_rawDescGZIP() []byte {
	file_ptypes_compute_proto_rawDescOnce.Do(func() {
		file_ptypes_compute_proto_rawDescData = protoimpl.X.CompressGZIP(file_ptypes_compute_proto_rawDescData)
	})
	return file_ptypes_compute_proto_rawDescData
}

var file_ptypes_compute_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ptypes_compute_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_ptypes_compute_proto_goTypes = []interface{}{
	(ComputeResourceStatus)(0),                        // 0: api.compute.ComputeResourceStatus
	(ComputeResourceRenewState)(0),                    // 1: api.compute.ComputeResourceRenewState
	(*RescueMode)(nil),                                // 2: api.compute.RescueMode
	(*Provisioning)(nil),                              // 3: api.compute.Provisioning
	(*ComputeResourceIp)(nil),                         // 4: api.compute.ComputeResourceIp
	(*ComputeResourceJobStatus)(nil),                  // 5: api.compute.ComputeResourceJobStatus
	(*ComputeResource)(nil),                           // 6: api.compute.ComputeResource
	(*ComputeResourceProvisioning)(nil),               // 7: api.compute.ComputeResourceProvisioning
	(*GetComputeResourceTrafficRequest)(nil),          // 8: api.compute.GetComputeResourceTrafficRequest
	(*GetComputeResourceTrafficResponse)(nil),         // 9: api.compute.GetComputeResourceTrafficResponse
	(*TrafficUsage)(nil),                              // 10: api.compute.TrafficUsage
	(*TrafficUsageEntry)(nil),                         // 11: api.compute.TrafficUsageEntry
	(*CreateComputeResourceRequest)(nil),              // 12: api.compute.CreateComputeResourceRequest
	(*CreateComputeResourceResponse)(nil),             // 13: api.compute.CreateComputeResourceResponse
	(*ListComputeResourcesRequest)(nil),               // 14: api.compute.ListComputeResourcesRequest
	(*ListComputeResourcesResponse)(nil),              // 15: api.compute.ListComputeResourcesResponse
	(*GetComputeResourceRequest)(nil),                 // 16: api.compute.GetComputeResourceRequest
	(*GetComputeResourceConsoleRequest)(nil),          // 17: api.compute.GetComputeResourceConsoleRequest
	(*GetComputeResourceConsoleResponse)(nil),         // 18: api.compute.GetComputeResourceConsoleResponse
	(*UpdateComputeResourceRequest)(nil),              // 19: api.compute.UpdateComputeResourceRequest
	(*ReinstallComputeResourceRequest)(nil),           // 20: api.compute.ReinstallComputeResourceRequest
	(*ChangeComputeResourceRenewStateRequest)(nil),    // 21: api.compute.ChangeComputeResourceRenewStateRequest
	(*DestroyComputeResourceRequest)(nil),             // 22: api.compute.DestroyComputeResourceRequest
	(*PowerActionComputeResourceRequest)(nil),         // 23: api.compute.PowerActionComputeResourceRequest
	(*ComputeResourceRescueModeRequest)(nil),          // 24: api.compute.ComputeResourceRescueModeRequest
	(*GetComputeResourcePricingRequest)(nil),          // 25: api.compute.GetComputeResourcePricingRequest
	(*GetComputeResourcePricingResponse)(nil),         // 26: api.compute.GetComputeResourcePricingResponse
	(*ChangeComputeResourceBillingPeriodRequest)(nil), // 27: api.compute.ChangeComputeResourceBillingPeriodRequest
	nil, // 28: api.compute.ComputeResource.TagsEntry
	(*ComputeResourceProvisioning_Image)(nil), // 29: api.compute.ComputeResourceProvisioning.Image
	nil,                           // 30: api.compute.UpdateComputeResourceRequest.TagsEntry
	(*Image)(nil),                 // 31: api.image.Image
	(*SSHKey)(nil),                // 32: api.security.SSHKey
	(NetworkType)(0),              // 33: api.network.NetworkType
	(*timestamppb.Timestamp)(nil), // 34: google.protobuf.Timestamp
	(ComputeResourceType)(0),      // 35: api.ComputeResourceType
	(*DataCenter)(nil),            // 36: api.region.DataCenter
	(*Flavour)(nil),               // 37: api.flavour.Flavour
	(*Price)(nil),                 // 38: api.Price
	(*Server)(nil),                // 39: api.server.Server
	(BillingPeriod)(0),            // 40: api.billing.BillingPeriod
	(ServerPowerStatus)(0),        // 41: api.server.ServerPowerStatus
}
var file_ptypes_compute_proto_depIdxs = []int32{
	31, // 0: api.compute.Provisioning.image:type_name -> api.image.Image
	32, // 1: api.compute.Provisioning.ssh_keys:type_name -> api.security.SSHKey
	33, // 2: api.compute.ComputeResourceIp.type:type_name -> api.network.NetworkType
	34, // 3: api.compute.ComputeResourceJobStatus.job_started_at:type_name -> google.protobuf.Timestamp
	34, // 4: api.compute.ComputeResourceJobStatus.job_estimated_finish_at:type_name -> google.protobuf.Timestamp
	4,  // 5: api.compute.ComputeResource.ips:type_name -> api.compute.ComputeResourceIp
	35, // 6: api.compute.ComputeResource.type:type_name -> api.ComputeResourceType
	0,  // 7: api.compute.ComputeResource.status:type_name -> api.compute.ComputeResourceStatus
	28, // 8: api.compute.ComputeResource.tags:type_name -> api.compute.ComputeResource.TagsEntry
	36, // 9: api.compute.ComputeResource.datacenter:type_name -> api.region.DataCenter
	2,  // 10: api.compute.ComputeResource.rescue_mode:type_name -> api.compute.RescueMode
	37, // 11: api.compute.ComputeResource.flavour:type_name -> api.flavour.Flavour
	31, // 12: api.compute.ComputeResource.image:type_name -> api.image.Image
	38, // 13: api.compute.ComputeResource.price:type_name -> api.Price
	39, // 14: api.compute.ComputeResource.server:type_name -> api.server.Server
	34, // 15: api.compute.ComputeResource.created_at:type_name -> google.protobuf.Timestamp
	5,  // 16: api.compute.ComputeResource.job_status:type_name -> api.compute.ComputeResourceJobStatus
	40, // 17: api.compute.ComputeResource.billing_period:type_name -> api.billing.BillingPeriod
	34, // 18: api.compute.ComputeResource.paid_until:type_name -> google.protobuf.Timestamp
	1,  // 19: api.compute.ComputeResource.renew_state:type_name -> api.compute.ComputeResourceRenewState
	29, // 20: api.compute.ComputeResourceProvisioning.image:type_name -> api.compute.ComputeResourceProvisioning.Image
	10, // 21: api.compute.GetComputeResourceTrafficResponse.usage:type_name -> api.compute.TrafficUsage
	11, // 22: api.compute.TrafficUsage.traffic:type_name -> api.compute.TrafficUsageEntry
	34, // 23: api.compute.TrafficUsageEntry.timestamp:type_name -> google.protobuf.Timestamp
	40, // 24: api.compute.CreateComputeResourceRequest.billing_period:type_name -> api.billing.BillingPeriod
	6,  // 25: api.compute.CreateComputeResourceResponse.resources:type_name -> api.compute.ComputeResource
	6,  // 26: api.compute.ListComputeResourcesResponse.resources:type_name -> api.compute.ComputeResource
	30, // 27: api.compute.UpdateComputeResourceRequest.tags:type_name -> api.compute.UpdateComputeResourceRequest.TagsEntry
	1,  // 28: api.compute.ChangeComputeResourceRenewStateRequest.renew_state:type_name -> api.compute.ComputeResourceRenewState
	41, // 29: api.compute.PowerActionComputeResourceRequest.status:type_name -> api.server.ServerPowerStatus
	2,  // 30: api.compute.ComputeResourceRescueModeRequest.rescue_mode:type_name -> api.compute.RescueMode
	38, // 31: api.compute.GetComputeResourcePricingResponse.current_price:type_name -> api.Price
	40, // 32: api.compute.GetComputeResourcePricingResponse.current_billing_period:type_name -> api.billing.BillingPeriod
	38, // 33: api.compute.GetComputeResourcePricingResponse.new_monthly_pricing:type_name -> api.Price
	38, // 34: api.compute.GetComputeResourcePricingResponse.new_hourly_pricing:type_name -> api.Price
	40, // 35: api.compute.ChangeComputeResourceBillingPeriodRequest.billing_period:type_name -> api.billing.BillingPeriod
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_ptypes_compute_proto_init() }
func file_ptypes_compute_proto_init() {
	if File_ptypes_compute_proto != nil {
		return
	}
	file_ptypes_server_proto_init()
	file_ptypes_image_proto_init()
	file_ptypes_generic_proto_init()
	file_ptypes_security_proto_init()
	file_ptypes_region_proto_init()
	file_ptypes_network_proto_init()
	file_ptypes_flavour_proto_init()
	file_ptypes_billing_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ptypes_compute_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RescueMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provisioning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeResourceIp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeResourceJobStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeResourceProvisioning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComputeResourceTrafficRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComputeResourceTrafficResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficUsageEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateComputeResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateComputeResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComputeResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComputeResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComputeResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComputeResourceConsoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComputeResourceConsoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComputeResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReinstallComputeResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeComputeResourceRenewStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyComputeResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PowerActionComputeResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeResourceRescueModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComputeResourcePricingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComputeResourcePricingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeComputeResourceBillingPeriodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_compute_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeResourceProvisioning_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ptypes_compute_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ptypes_compute_proto_goTypes,
		DependencyIndexes: file_ptypes_compute_proto_depIdxs,
		EnumInfos:         file_ptypes_compute_proto_enumTypes,
		MessageInfos:      file_ptypes_compute_proto_msgTypes,
	}.Build()
	File_ptypes_compute_proto = out.File
	file_ptypes_compute_proto_rawDesc = nil
	file_ptypes_compute_proto_goTypes = nil
	file_ptypes_compute_proto_depIdxs = nil
}
