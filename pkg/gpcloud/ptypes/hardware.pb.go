// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: hardware.proto

package ptypes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HardwarePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor string `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Serial string `protobuf:"bytes,3,opt,name=serial,proto3" json:"serial,omitempty"`
}

func (x *HardwarePart) Reset() {
	*x = HardwarePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hardware_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwarePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwarePart) ProtoMessage() {}

func (x *HardwarePart) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwarePart.ProtoReflect.Descriptor instead.
func (*HardwarePart) Descriptor() ([]byte, []int) {
	return file_hardware_proto_rawDescGZIP(), []int{0}
}

func (x *HardwarePart) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *HardwarePart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HardwarePart) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

type HardwareInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed      int32  `protobuf:"varint,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Vendor     string `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	MacAddress string `protobuf:"bytes,4,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
}

func (x *HardwareInterface) Reset() {
	*x = HardwareInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hardware_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareInterface) ProtoMessage() {}

func (x *HardwareInterface) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareInterface.ProtoReflect.Descriptor instead.
func (*HardwareInterface) Descriptor() ([]byte, []int) {
	return file_hardware_proto_rawDescGZIP(), []int{1}
}

func (x *HardwareInterface) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *HardwareInterface) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *HardwareInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HardwareInterface) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

type HardwareInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System            *HardwarePart        `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Board             *HardwarePart        `protobuf:"bytes,2,opt,name=board,proto3" json:"board,omitempty"`
	Cpus              []*HardwarePart      `protobuf:"bytes,3,rep,name=cpus,proto3" json:"cpus,omitempty"`
	Disks             []*HardwarePart      `protobuf:"bytes,4,rep,name=disks,proto3" json:"disks,omitempty"`
	Memory            []*HardwarePart      `protobuf:"bytes,5,rep,name=memory,proto3" json:"memory,omitempty"`
	NetworkInterfaces []*HardwareInterface `protobuf:"bytes,6,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
}

func (x *HardwareInventory) Reset() {
	*x = HardwareInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hardware_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareInventory) ProtoMessage() {}

func (x *HardwareInventory) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareInventory.ProtoReflect.Descriptor instead.
func (*HardwareInventory) Descriptor() ([]byte, []int) {
	return file_hardware_proto_rawDescGZIP(), []int{2}
}

func (x *HardwareInventory) GetSystem() *HardwarePart {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *HardwareInventory) GetBoard() *HardwarePart {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *HardwareInventory) GetCpus() []*HardwarePart {
	if x != nil {
		return x.Cpus
	}
	return nil
}

func (x *HardwareInventory) GetDisks() []*HardwarePart {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *HardwareInventory) GetMemory() []*HardwarePart {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *HardwareInventory) GetNetworkInterfaces() []*HardwareInterface {
	if x != nil {
		return x.NetworkInterfaces
	}
	return nil
}

type PushHardwareInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip        string             `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Inventory *HardwareInventory `protobuf:"bytes,2,opt,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *PushHardwareInventoryRequest) Reset() {
	*x = PushHardwareInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hardware_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushHardwareInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushHardwareInventoryRequest) ProtoMessage() {}

func (x *PushHardwareInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushHardwareInventoryRequest.ProtoReflect.Descriptor instead.
func (*PushHardwareInventoryRequest) Descriptor() ([]byte, []int) {
	return file_hardware_proto_rawDescGZIP(), []int{3}
}

func (x *PushHardwareInventoryRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PushHardwareInventoryRequest) GetInventory() *HardwareInventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

var File_hardware_proto protoreflect.FileDescriptor

var file_hardware_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x22, 0x52,
	0x0a, 0x0c, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x22, 0x76, 0x0a, 0x11, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xdf, 0x02, 0x0a, 0x11, 0x48,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x32, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x50, 0x61, 0x72, 0x74, 0x52, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x50, 0x61, 0x72, 0x74, 0x52,
	0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x70, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x52, 0x04, 0x63, 0x70, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x4e, 0x0a, 0x12,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x1c,
	0x50, 0x75, 0x73, 0x68, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x3d, 0x0a, 0x09,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x48,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x16, 0x5a, 0x14, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x3b, 0x70, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hardware_proto_rawDescOnce sync.Once
	file_hardware_proto_rawDescData = file_hardware_proto_rawDesc
)

func file_hardware_proto_rawDescGZIP() []byte {
	file_hardware_proto_rawDescOnce.Do(func() {
		file_hardware_proto_rawDescData = protoimpl.X.CompressGZIP(file_hardware_proto_rawDescData)
	})
	return file_hardware_proto_rawDescData
}

var file_hardware_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_hardware_proto_goTypes = []interface{}{
	(*HardwarePart)(nil),                 // 0: api.hardware.HardwarePart
	(*HardwareInterface)(nil),            // 1: api.hardware.HardwareInterface
	(*HardwareInventory)(nil),            // 2: api.hardware.HardwareInventory
	(*PushHardwareInventoryRequest)(nil), // 3: api.hardware.PushHardwareInventoryRequest
}
var file_hardware_proto_depIdxs = []int32{
	0, // 0: api.hardware.HardwareInventory.system:type_name -> api.hardware.HardwarePart
	0, // 1: api.hardware.HardwareInventory.board:type_name -> api.hardware.HardwarePart
	0, // 2: api.hardware.HardwareInventory.cpus:type_name -> api.hardware.HardwarePart
	0, // 3: api.hardware.HardwareInventory.disks:type_name -> api.hardware.HardwarePart
	0, // 4: api.hardware.HardwareInventory.memory:type_name -> api.hardware.HardwarePart
	1, // 5: api.hardware.HardwareInventory.network_interfaces:type_name -> api.hardware.HardwareInterface
	2, // 6: api.hardware.PushHardwareInventoryRequest.inventory:type_name -> api.hardware.HardwareInventory
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_hardware_proto_init() }
func file_hardware_proto_init() {
	if File_hardware_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hardware_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwarePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hardware_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hardware_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hardware_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushHardwareInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hardware_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hardware_proto_goTypes,
		DependencyIndexes: file_hardware_proto_depIdxs,
		MessageInfos:      file_hardware_proto_msgTypes,
	}.Build()
	File_hardware_proto = out.File
	file_hardware_proto_rawDesc = nil
	file_hardware_proto_goTypes = nil
	file_hardware_proto_depIdxs = nil
}
