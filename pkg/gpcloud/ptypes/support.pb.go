// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: ptypes/support.proto

package ptypes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TicketStatus int32

const (
	TicketStatus_OPEN        TicketStatus = 0
	TicketStatus_IN_PROGRESS TicketStatus = 1
	TicketStatus_CLOSED      TicketStatus = 2
)

// Enum value maps for TicketStatus.
var (
	TicketStatus_name = map[int32]string{
		0: "OPEN",
		1: "IN_PROGRESS",
		2: "CLOSED",
	}
	TicketStatus_value = map[string]int32{
		"OPEN":        0,
		"IN_PROGRESS": 1,
		"CLOSED":      2,
	}
)

func (x TicketStatus) Enum() *TicketStatus {
	p := new(TicketStatus)
	*p = x
	return p
}

func (x TicketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ptypes_support_proto_enumTypes[0].Descriptor()
}

func (TicketStatus) Type() protoreflect.EnumType {
	return &file_ptypes_support_proto_enumTypes[0]
}

func (x TicketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketStatus.Descriptor instead.
func (TicketStatus) EnumDescriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{0}
}

type SupportPackageType int32

const (
	SupportPackageType_BASIC_PLAN    SupportPackageType = 0
	SupportPackageType_ADVANCED_PLAN SupportPackageType = 1
)

// Enum value maps for SupportPackageType.
var (
	SupportPackageType_name = map[int32]string{
		0: "BASIC_PLAN",
		1: "ADVANCED_PLAN",
	}
	SupportPackageType_value = map[string]int32{
		"BASIC_PLAN":    0,
		"ADVANCED_PLAN": 1,
	}
)

func (x SupportPackageType) Enum() *SupportPackageType {
	p := new(SupportPackageType)
	*p = x
	return p
}

func (x SupportPackageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SupportPackageType) Descriptor() protoreflect.EnumDescriptor {
	return file_ptypes_support_proto_enumTypes[1].Descriptor()
}

func (SupportPackageType) Type() protoreflect.EnumType {
	return &file_ptypes_support_proto_enumTypes[1]
}

func (x SupportPackageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SupportPackageType.Descriptor instead.
func (SupportPackageType) EnumDescriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{1}
}

type TicketCommentType int32

const (
	TicketCommentType_CUSTOMER TicketCommentType = 0
	TicketCommentType_AGENT    TicketCommentType = 1
)

// Enum value maps for TicketCommentType.
var (
	TicketCommentType_name = map[int32]string{
		0: "CUSTOMER",
		1: "AGENT",
	}
	TicketCommentType_value = map[string]int32{
		"CUSTOMER": 0,
		"AGENT":    1,
	}
)

func (x TicketCommentType) Enum() *TicketCommentType {
	p := new(TicketCommentType)
	*p = x
	return p
}

func (x TicketCommentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketCommentType) Descriptor() protoreflect.EnumDescriptor {
	return file_ptypes_support_proto_enumTypes[2].Descriptor()
}

func (TicketCommentType) Type() protoreflect.EnumType {
	return &file_ptypes_support_proto_enumTypes[2]
}

func (x TicketCommentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketCommentType.Descriptor instead.
func (TicketCommentType) EnumDescriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{2}
}

type SupportTicketPriority int32

const (
	SupportTicketPriority_NORMAL SupportTicketPriority = 0
	SupportTicketPriority_LOW    SupportTicketPriority = 1
	SupportTicketPriority_HIGH   SupportTicketPriority = 2
)

// Enum value maps for SupportTicketPriority.
var (
	SupportTicketPriority_name = map[int32]string{
		0: "NORMAL",
		1: "LOW",
		2: "HIGH",
	}
	SupportTicketPriority_value = map[string]int32{
		"NORMAL": 0,
		"LOW":    1,
		"HIGH":   2,
	}
)

func (x SupportTicketPriority) Enum() *SupportTicketPriority {
	p := new(SupportTicketPriority)
	*p = x
	return p
}

func (x SupportTicketPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SupportTicketPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_ptypes_support_proto_enumTypes[3].Descriptor()
}

func (SupportTicketPriority) Type() protoreflect.EnumType {
	return &file_ptypes_support_proto_enumTypes[3]
}

func (x SupportTicketPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SupportTicketPriority.Descriptor instead.
func (SupportTicketPriority) EnumDescriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{3}
}

type SupportTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Priority  SupportTicketPriority   `protobuf:"varint,3,opt,name=priority,proto3,enum=api.support.SupportTicketPriority" json:"priority,omitempty"`
	Status    TicketStatus            `protobuf:"varint,4,opt,name=status,proto3,enum=api.support.TicketStatus" json:"status,omitempty"`
	User      *BasicUser              `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Number    int64                   `protobuf:"varint,6,opt,name=number,proto3" json:"number,omitempty"`
	Comments  []*SupportTicketComment `protobuf:"bytes,7,rep,name=comments,proto3" json:"comments,omitempty"`
	CreatedAt *timestamppb.Timestamp  `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp  `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *SupportTicket) Reset() {
	*x = SupportTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportTicket) ProtoMessage() {}

func (x *SupportTicket) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportTicket.ProtoReflect.Descriptor instead.
func (*SupportTicket) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{0}
}

func (x *SupportTicket) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SupportTicket) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SupportTicket) GetPriority() SupportTicketPriority {
	if x != nil {
		return x.Priority
	}
	return SupportTicketPriority_NORMAL
}

func (x *SupportTicket) GetStatus() TicketStatus {
	if x != nil {
		return x.Status
	}
	return TicketStatus_OPEN
}

func (x *SupportTicket) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SupportTicket) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *SupportTicket) GetComments() []*SupportTicketComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *SupportTicket) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SupportTicket) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SupportTicketComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      *BasicUser             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Type      TicketCommentType      `protobuf:"varint,2,opt,name=type,proto3,enum=api.support.TicketCommentType" json:"type,omitempty"`
	Comment   string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *SupportTicketComment) Reset() {
	*x = SupportTicketComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportTicketComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportTicketComment) ProtoMessage() {}

func (x *SupportTicketComment) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportTicketComment.ProtoReflect.Descriptor instead.
func (*SupportTicketComment) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{1}
}

func (x *SupportTicketComment) GetUser() *BasicUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SupportTicketComment) GetType() TicketCommentType {
	if x != nil {
		return x.Type
	}
	return TicketCommentType_CUSTOMER
}

func (x *SupportTicketComment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SupportTicketComment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Support Packages
type SupportPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan    SupportPackageType     `protobuf:"varint,1,opt,name=plan,proto3,enum=api.support.SupportPackageType" json:"plan,omitempty"`
	Name    string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price   *Price                 `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	Active  bool                   `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	Support *SupportPackageSupport `protobuf:"bytes,5,opt,name=support,proto3" json:"support,omitempty"`
}

func (x *SupportPackage) Reset() {
	*x = SupportPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportPackage) ProtoMessage() {}

func (x *SupportPackage) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportPackage.ProtoReflect.Descriptor instead.
func (*SupportPackage) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{2}
}

func (x *SupportPackage) GetPlan() SupportPackageType {
	if x != nil {
		return x.Plan
	}
	return SupportPackageType_BASIC_PLAN
}

func (x *SupportPackage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SupportPackage) GetPrice() *Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *SupportPackage) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *SupportPackage) GetSupport() *SupportPackageSupport {
	if x != nil {
		return x.Support
	}
	return nil
}

type SupportPackageSupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket           bool                    `protobuf:"varint,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Chat             bool                    `protobuf:"varint,2,opt,name=chat,proto3" json:"chat,omitempty"`
	Phone            bool                    `protobuf:"varint,3,opt,name=phone,proto3" json:"phone,omitempty"`
	TicketPriorities []SupportTicketPriority `protobuf:"varint,4,rep,packed,name=ticket_priorities,json=ticketPriorities,proto3,enum=api.support.SupportTicketPriority" json:"ticket_priorities,omitempty"`
	TicketSlas       []*SupportTicketSLA     `protobuf:"bytes,5,rep,name=ticket_slas,json=ticketSlas,proto3" json:"ticket_slas,omitempty"`
}

func (x *SupportPackageSupport) Reset() {
	*x = SupportPackageSupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportPackageSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportPackageSupport) ProtoMessage() {}

func (x *SupportPackageSupport) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportPackageSupport.ProtoReflect.Descriptor instead.
func (*SupportPackageSupport) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{3}
}

func (x *SupportPackageSupport) GetTicket() bool {
	if x != nil {
		return x.Ticket
	}
	return false
}

func (x *SupportPackageSupport) GetChat() bool {
	if x != nil {
		return x.Chat
	}
	return false
}

func (x *SupportPackageSupport) GetPhone() bool {
	if x != nil {
		return x.Phone
	}
	return false
}

func (x *SupportPackageSupport) GetTicketPriorities() []SupportTicketPriority {
	if x != nil {
		return x.TicketPriorities
	}
	return nil
}

func (x *SupportPackageSupport) GetTicketSlas() []*SupportTicketSLA {
	if x != nil {
		return x.TicketSlas
	}
	return nil
}

type SupportTicketSLA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority            SupportTicketPriority `protobuf:"varint,1,opt,name=priority,proto3,enum=api.support.SupportTicketPriority" json:"priority,omitempty"`
	FirstReplyTimeHours int32                 `protobuf:"varint,2,opt,name=first_reply_time_hours,json=firstReplyTimeHours,proto3" json:"first_reply_time_hours,omitempty"`
	NextReplyTimeHours  int32                 `protobuf:"varint,3,opt,name=next_reply_time_hours,json=nextReplyTimeHours,proto3" json:"next_reply_time_hours,omitempty"`
}

func (x *SupportTicketSLA) Reset() {
	*x = SupportTicketSLA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportTicketSLA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportTicketSLA) ProtoMessage() {}

func (x *SupportTicketSLA) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportTicketSLA.ProtoReflect.Descriptor instead.
func (*SupportTicketSLA) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{4}
}

func (x *SupportTicketSLA) GetPriority() SupportTicketPriority {
	if x != nil {
		return x.Priority
	}
	return SupportTicketPriority_NORMAL
}

func (x *SupportTicketSLA) GetFirstReplyTimeHours() int32 {
	if x != nil {
		return x.FirstReplyTimeHours
	}
	return 0
}

func (x *SupportTicketSLA) GetNextReplyTimeHours() int32 {
	if x != nil {
		return x.NextReplyTimeHours
	}
	return 0
}

type ListProjectSupportPackagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListProjectSupportPackagesRequest) Reset() {
	*x = ListProjectSupportPackagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectSupportPackagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectSupportPackagesRequest) ProtoMessage() {}

func (x *ListProjectSupportPackagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectSupportPackagesRequest.ProtoReflect.Descriptor instead.
func (*ListProjectSupportPackagesRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{5}
}

func (x *ListProjectSupportPackagesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListProjectSupportPackagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packages []*SupportPackage `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty"`
}

func (x *ListProjectSupportPackagesResponse) Reset() {
	*x = ListProjectSupportPackagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectSupportPackagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectSupportPackagesResponse) ProtoMessage() {}

func (x *ListProjectSupportPackagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectSupportPackagesResponse.ProtoReflect.Descriptor instead.
func (*ListProjectSupportPackagesResponse) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{6}
}

func (x *ListProjectSupportPackagesResponse) GetPackages() []*SupportPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

type ChangeProjectSupportPackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string             `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Plan      SupportPackageType `protobuf:"varint,2,opt,name=plan,proto3,enum=api.support.SupportPackageType" json:"plan,omitempty"`
}

func (x *ChangeProjectSupportPackageRequest) Reset() {
	*x = ChangeProjectSupportPackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeProjectSupportPackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeProjectSupportPackageRequest) ProtoMessage() {}

func (x *ChangeProjectSupportPackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeProjectSupportPackageRequest.ProtoReflect.Descriptor instead.
func (*ChangeProjectSupportPackageRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeProjectSupportPackageRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ChangeProjectSupportPackageRequest) GetPlan() SupportPackageType {
	if x != nil {
		return x.Plan
	}
	return SupportPackageType_BASIC_PLAN
}

// Ticket Board
type ListProjectSupportTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListProjectSupportTicketsRequest) Reset() {
	*x = ListProjectSupportTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectSupportTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectSupportTicketsRequest) ProtoMessage() {}

func (x *ListProjectSupportTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectSupportTicketsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectSupportTicketsRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{8}
}

func (x *ListProjectSupportTicketsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListProjectSupportTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets    []*SupportTicket `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListProjectSupportTicketsResponse) Reset() {
	*x = ListProjectSupportTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectSupportTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectSupportTicketsResponse) ProtoMessage() {}

func (x *ListProjectSupportTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectSupportTicketsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectSupportTicketsResponse) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{9}
}

func (x *ListProjectSupportTicketsResponse) GetTickets() []*SupportTicket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *ListProjectSupportTicketsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Tickets
type CreateProjectSupportTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string                `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Title     string                `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Message   string                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Priority  SupportTicketPriority `protobuf:"varint,4,opt,name=priority,proto3,enum=api.support.SupportTicketPriority" json:"priority,omitempty"`
}

func (x *CreateProjectSupportTicketRequest) Reset() {
	*x = CreateProjectSupportTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectSupportTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectSupportTicketRequest) ProtoMessage() {}

func (x *CreateProjectSupportTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectSupportTicketRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectSupportTicketRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{10}
}

func (x *CreateProjectSupportTicketRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateProjectSupportTicketRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateProjectSupportTicketRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateProjectSupportTicketRequest) GetPriority() SupportTicketPriority {
	if x != nil {
		return x.Priority
	}
	return SupportTicketPriority_NORMAL
}

type GetProjectSupportTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProjectSupportTicketRequest) Reset() {
	*x = GetProjectSupportTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectSupportTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectSupportTicketRequest) ProtoMessage() {}

func (x *GetProjectSupportTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectSupportTicketRequest.ProtoReflect.Descriptor instead.
func (*GetProjectSupportTicketRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{11}
}

func (x *GetProjectSupportTicketRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetProjectSupportTicketRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CloseProjectSupportTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CloseProjectSupportTicketRequest) Reset() {
	*x = CloseProjectSupportTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseProjectSupportTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseProjectSupportTicketRequest) ProtoMessage() {}

func (x *CloseProjectSupportTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseProjectSupportTicketRequest.ProtoReflect.Descriptor instead.
func (*CloseProjectSupportTicketRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{12}
}

func (x *CloseProjectSupportTicketRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CloseProjectSupportTicketRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddProjectSupportTicketCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Comment   string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *AddProjectSupportTicketCommentRequest) Reset() {
	*x = AddProjectSupportTicketCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ptypes_support_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectSupportTicketCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectSupportTicketCommentRequest) ProtoMessage() {}

func (x *AddProjectSupportTicketCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ptypes_support_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectSupportTicketCommentRequest.ProtoReflect.Descriptor instead.
func (*AddProjectSupportTicketCommentRequest) Descriptor() ([]byte, []int) {
	return file_ptypes_support_proto_rawDescGZIP(), []int{13}
}

func (x *AddProjectSupportTicketCommentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AddProjectSupportTicketCommentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddProjectSupportTicketCommentRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

var File_ptypes_support_proto protoreflect.FileDescriptor

var file_ptypes_support_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f,
	0x03, 0x0a, 0x0d, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xc9, 0x01, 0x0a, 0x14, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd1, 0x01, 0x0a,
	0x0e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x33, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x70, 0x6c, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x22, 0xea, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x4f, 0x0a, 0x11,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x10, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3e, 0x0a,
	0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x4c,
	0x41, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x6c, 0x61, 0x73, 0x22, 0xba, 0x01,
	0x0a, 0x10, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53,
	0x4c, 0x41, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x33, 0x0a, 0x16, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x42, 0x0a, 0x21, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5d,
	0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x22, 0x78, 0x0a,
	0x22, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x41, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x21, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x4f, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x20,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x70, 0x0a, 0x25, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2a, 0x35, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49,
	0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x37, 0x0a, 0x12, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x42, 0x41, 0x53, 0x49, 0x43, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x43, 0x45, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x10,
	0x01, 0x2a, 0x2c, 0x0a, 0x11, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d,
	0x45, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x2a,
	0x36, 0x0a, 0x15, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d,
	0x41, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x02, 0x42, 0x82, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x0c, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x14, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x74, 0x79, 0x70, 0x65,
	0x73, 0xa2, 0x02, 0x03, 0x41, 0x53, 0x58, 0xaa, 0x02, 0x0b, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0xca, 0x02, 0x0b, 0x41, 0x70, 0x69, 0x5c, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0xe2, 0x02, 0x17, 0x41, 0x70, 0x69, 0x5c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c,
	0x41, 0x70, 0x69, 0x3a, 0x3a, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ptypes_support_proto_rawDescOnce sync.Once
	file_ptypes_support_proto_rawDescData = file_ptypes_support_proto_rawDesc
)

func file_ptypes_support_proto_rawDescGZIP() []byte {
	file_ptypes_support_proto_rawDescOnce.Do(func() {
		file_ptypes_support_proto_rawDescData = protoimpl.X.CompressGZIP(file_ptypes_support_proto_rawDescData)
	})
	return file_ptypes_support_proto_rawDescData
}

var file_ptypes_support_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_ptypes_support_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_ptypes_support_proto_goTypes = []interface{}{
	(TicketStatus)(0),                             // 0: api.support.TicketStatus
	(SupportPackageType)(0),                       // 1: api.support.SupportPackageType
	(TicketCommentType)(0),                        // 2: api.support.TicketCommentType
	(SupportTicketPriority)(0),                    // 3: api.support.SupportTicketPriority
	(*SupportTicket)(nil),                         // 4: api.support.SupportTicket
	(*SupportTicketComment)(nil),                  // 5: api.support.SupportTicketComment
	(*SupportPackage)(nil),                        // 6: api.support.SupportPackage
	(*SupportPackageSupport)(nil),                 // 7: api.support.SupportPackageSupport
	(*SupportTicketSLA)(nil),                      // 8: api.support.SupportTicketSLA
	(*ListProjectSupportPackagesRequest)(nil),     // 9: api.support.ListProjectSupportPackagesRequest
	(*ListProjectSupportPackagesResponse)(nil),    // 10: api.support.ListProjectSupportPackagesResponse
	(*ChangeProjectSupportPackageRequest)(nil),    // 11: api.support.ChangeProjectSupportPackageRequest
	(*ListProjectSupportTicketsRequest)(nil),      // 12: api.support.ListProjectSupportTicketsRequest
	(*ListProjectSupportTicketsResponse)(nil),     // 13: api.support.ListProjectSupportTicketsResponse
	(*CreateProjectSupportTicketRequest)(nil),     // 14: api.support.CreateProjectSupportTicketRequest
	(*GetProjectSupportTicketRequest)(nil),        // 15: api.support.GetProjectSupportTicketRequest
	(*CloseProjectSupportTicketRequest)(nil),      // 16: api.support.CloseProjectSupportTicketRequest
	(*AddProjectSupportTicketCommentRequest)(nil), // 17: api.support.AddProjectSupportTicketCommentRequest
	(*BasicUser)(nil),                             // 18: api.basic.BasicUser
	(*timestamppb.Timestamp)(nil),                 // 19: google.protobuf.Timestamp
	(*Price)(nil),                                 // 20: api.Price
}
var file_ptypes_support_proto_depIdxs = []int32{
	3,  // 0: api.support.SupportTicket.priority:type_name -> api.support.SupportTicketPriority
	0,  // 1: api.support.SupportTicket.status:type_name -> api.support.TicketStatus
	18, // 2: api.support.SupportTicket.user:type_name -> api.basic.BasicUser
	5,  // 3: api.support.SupportTicket.comments:type_name -> api.support.SupportTicketComment
	19, // 4: api.support.SupportTicket.created_at:type_name -> google.protobuf.Timestamp
	19, // 5: api.support.SupportTicket.updated_at:type_name -> google.protobuf.Timestamp
	18, // 6: api.support.SupportTicketComment.user:type_name -> api.basic.BasicUser
	2,  // 7: api.support.SupportTicketComment.type:type_name -> api.support.TicketCommentType
	19, // 8: api.support.SupportTicketComment.created_at:type_name -> google.protobuf.Timestamp
	1,  // 9: api.support.SupportPackage.plan:type_name -> api.support.SupportPackageType
	20, // 10: api.support.SupportPackage.price:type_name -> api.Price
	7,  // 11: api.support.SupportPackage.support:type_name -> api.support.SupportPackageSupport
	3,  // 12: api.support.SupportPackageSupport.ticket_priorities:type_name -> api.support.SupportTicketPriority
	8,  // 13: api.support.SupportPackageSupport.ticket_slas:type_name -> api.support.SupportTicketSLA
	3,  // 14: api.support.SupportTicketSLA.priority:type_name -> api.support.SupportTicketPriority
	6,  // 15: api.support.ListProjectSupportPackagesResponse.packages:type_name -> api.support.SupportPackage
	1,  // 16: api.support.ChangeProjectSupportPackageRequest.plan:type_name -> api.support.SupportPackageType
	4,  // 17: api.support.ListProjectSupportTicketsResponse.tickets:type_name -> api.support.SupportTicket
	3,  // 18: api.support.CreateProjectSupportTicketRequest.priority:type_name -> api.support.SupportTicketPriority
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_ptypes_support_proto_init() }
func file_ptypes_support_proto_init() {
	if File_ptypes_support_proto != nil {
		return
	}
	file_ptypes_basic_proto_init()
	file_ptypes_generic_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ptypes_support_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportTicketComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportPackageSupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportTicketSLA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectSupportPackagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectSupportPackagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeProjectSupportPackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectSupportTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectSupportTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectSupportTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectSupportTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseProjectSupportTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ptypes_support_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectSupportTicketCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ptypes_support_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ptypes_support_proto_goTypes,
		DependencyIndexes: file_ptypes_support_proto_depIdxs,
		EnumInfos:         file_ptypes_support_proto_enumTypes,
		MessageInfos:      file_ptypes_support_proto_msgTypes,
	}.Build()
	File_ptypes_support_proto = out.File
	file_ptypes_support_proto_rawDesc = nil
	file_ptypes_support_proto_goTypes = nil
	file_ptypes_support_proto_depIdxs = nil
}
